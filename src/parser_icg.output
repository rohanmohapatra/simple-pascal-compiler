State 73 conflicts: 6 shift/reduce
State 121 conflicts: 1 shift/reduce
State 205 conflicts: 14 shift/reduce
State 207 conflicts: 5 shift/reduce
State 210 conflicts: 5 shift/reduce
State 229 conflicts: 5 shift/reduce, 7 reduce/reduce
State 234 conflicts: 1 shift/reduce
State 236 conflicts: 1 shift/reduce
State 241 conflicts: 5 shift/reduce, 7 reduce/reduce


Grammar

    0 $accept: startPascal $end

    1 startPascal: program

    2 program: prog_heading block '.'

    3 prog_heading: T_PROGRAM T_IDENTIFIER ';'

    4 block: uses_block constant_block type_block variable_block function_and_procedure_block execution_block

    5 $@1: %empty

    6 uses_block: T_USES T_IDENTIFIER $@1 more_libs ';'
    7           | epsilon

    8 $@2: %empty

    9 more_libs: ',' T_IDENTIFIER $@2 more_libs
   10          | epsilon

   11 constant_block: T_CONST const_definition
   12               | epsilon

   13 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition

   14 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition
   15                      | epsilon

   16 type_block: T_TYPE type_definition
   17           | epsilon

   18 $@3: %empty

   19 $@4: %empty

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers T_SINGLEEQ T_DATATYPE $@4 ';' type_definition
   21                | epsilon

   22 variable_block: T_VAR variable_declaration
   23               | epsilon

   24 $@5: %empty

   25 $@6: %empty

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers ':' data_type $@6 ';' variable_declaration
   27                     | epsilon

   28 data_type: T_DATATYPE
   29          | T_IDENTIFIER
   30          | T_ARRAY '[' T_INDEXTYPE ']' T_OF T_DATATYPE

   31 $@7: %empty

   32 more_type_identifiers: ',' T_IDENTIFIER $@7 more_type_identifiers
   33                      | epsilon

   34 $@8: %empty

   35 more_var_identifiers: ',' T_IDENTIFIER $@8 more_var_identifiers
   36                     | epsilon

   37 function_and_procedure_block: function_block function_and_procedure_block
   38                             | procedure_block function_and_procedure_block
   39                             | epsilon

   40 $@9: %empty

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@9 ';' fp_block ';'

   42 $@10: %empty

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' param_list ')' ';' fp_block ';'

   44 param_list: T_IDENTIFIER ':' T_DATATYPE
   45           | T_IDENTIFIER ':' T_DATATYPE ';' param_list
   46           | epsilon

   47 $@11: %empty

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 ':' T_DATATYPE ';' fp_block ';'

   49 $@12: %empty

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' ':' T_DATATYPE ';' fp_block ';'

   51 $@13: %empty

   52 $@14: %empty

   53 function_param_list: T_IDENTIFIER $@13 more_func_identifiers ':' T_DATATYPE $@14 function_param_continue

   54 function_param_continue: epsilon
   55                        | ';' function_param_list

   56 $@15: %empty

   57 more_func_identifiers: ',' T_IDENTIFIER $@15 more_func_identifiers
   58                      | epsilon

   59 fp_block: variable_block execution_block

   60 execution_block: T_BEGIN execution_body T_END

   61 execution_body: execution_body statements
   62               | epsilon

   63 statements: assignment_statements
   64           | structured_statements
   65           | print_statements

   66 structured_statements: conditional_statement
   67                      | repetitive_statement

   68 $@16: %empty

   69 $@17: %empty

   70 conditional_statement: T_IF '(' boolean_expression ')' $@16 T_THEN execution_body $@17 if_then_follow

   71 if_then_follow: else_if_block
   72               | else_block
   73               | epsilon

   74 else_if_block: T_ELSE conditional_statement

   75 else_block: T_ELSE execution_body

   76 repetitive_statement: for_statement
   77                     | while_statement

   78 while_statement: T_WHILE '(' boolean_expression ')' T_DO statements

   79 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list T_DO statements

   80 for_list: expression T_TO expression
   81         | expression T_DOWNTO expression

   82 print_statements: T_WRITELN '(' T_STRINGVAL ')' ';'

   83 assignment_statements: assignment_statement ';' assignment_statements
   84                      | epsilon

   85 @18: %empty

   86 assignment_statement: T_IDENTIFIER @18 assignment_ops expression

   87 value: T_INTVAL
   88      | T_FLOATVAL
   89      | T_BOOLVAL
   90      | T_STRINGVAL

   91 expression: T_IDENTIFIER
   92           | value
   93           | '(' expression ')'
   94           | expression operator expression

   95 $@19: %empty

   96 boolean_expression: expression relational_ops expression $@19

   97 operator: arithmetic_ops
   98         | boolean_ops
   99         | bitwise_ops

  100 assignment_ops: T_ASOP
  101               | T_AS_PE
  102               | T_AS_SE
  103               | T_AS_MULE
  104               | T_AS_DIVE

  105 arithmetic_ops: '+'
  106               | '*'
  107               | '/'
  108               | '-'
  109               | '%'

  110 relational_ops: T_SINGLEEQ
  111               | '>'
  112               | '<'
  113               | T_REL_LE
  114               | T_REL_GE
  115               | T_REL_NE

  116 boolean_ops: T_BOOL_AND
  117            | T_BOOL_OR
  118            | T_BOOL_NOT

  119 bitwise_ops: '&'
  120            | '|'
  121            | '~'
  122            | '!'
  123            | T_BIT_LS
  124            | T_BIT_RS

  125 some_numeric_type: T_INTVAL
  126                  | T_FLOATVAL

  127 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 122
'%' (37) 109
'&' (38) 119
'(' (40) 43 50 70 78 82 93
')' (41) 43 50 70 78 82 93
'*' (42) 106
'+' (43) 105
',' (44) 9 32 35 57
'-' (45) 108
'.' (46) 2
'/' (47) 107
':' (58) 26 44 45 48 50 53
';' (59) 3 6 13 14 20 26 41 43 45 48 50 55 82 83
'<' (60) 112
'>' (62) 111
'[' (91) 30
']' (93) 30
'|' (124) 120
'~' (126) 121
error (256)
T_USES (258) 6
T_WHILE (259) 78
T_PROGRAM (260) 3
T_VAR (261) 22
T_TYPE (262) 16
T_IF (263) 70
T_THEN (264) 70
T_ELSE (265) 74 75
T_BEGIN (266) 60
T_END (267) 60
T_CONST (268) 11
T_WRITELN (269) 82
T_PROCEDURE (270) 41 43
T_FUNCTION (271) 48 50
T_FOR (272) 79
T_DO (273) 78 79
T_TO (274) 80
T_OF (275) 30
T_DOWNTO (276) 81
T_BOOL_AND (277) 116
T_BOOL_OR (278) 117
T_BOOL_NOT (279) 118
T_REL_LE (280) 113
T_REL_GE (281) 114
T_REL_NE (282) 115
T_SINGLEEQ (283) 13 14 20 110
T_BIT_LS (284) 123
T_BIT_RS (285) 124
T_ASOP (286) 79 100
T_AS_PE (287) 101
T_AS_SE (288) 102
T_AS_MULE (289) 103
T_AS_DIVE (290) 104
T_ARRAY (291) 30
T_INDEXTYPE (292) 30
T_IDENTIFIER (293) 3 6 9 13 14 20 26 29 32 35 41 43 44 45 48 50 53
    57 79 86 91
T_DATATYPE (294) 20 28 30 44 45 48 50 53
T_INTVAL (295) 87 125
T_FLOATVAL (296) 88 126
T_BOOLVAL (297) 89
T_STRINGVAL (298) 82 90


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
startPascal (64)
    on left: 1, on right: 0
program (65)
    on left: 2, on right: 1
prog_heading (66)
    on left: 3, on right: 2
block (67)
    on left: 4, on right: 2
uses_block (68)
    on left: 6 7, on right: 4
$@1 (69)
    on left: 5, on right: 6
more_libs (70)
    on left: 9 10, on right: 6 9
$@2 (71)
    on left: 8, on right: 9
constant_block (72)
    on left: 11 12, on right: 4
const_definition (73)
    on left: 13, on right: 11
more_const_definition (74)
    on left: 14 15, on right: 13 14
type_block (75)
    on left: 16 17, on right: 4
type_definition (76)
    on left: 20 21, on right: 16 20
$@3 (77)
    on left: 18, on right: 20
$@4 (78)
    on left: 19, on right: 20
variable_block (79)
    on left: 22 23, on right: 4 59
variable_declaration (80)
    on left: 26 27, on right: 22 26
$@5 (81)
    on left: 24, on right: 26
$@6 (82)
    on left: 25, on right: 26
data_type (83)
    on left: 28 29 30, on right: 26
more_type_identifiers (84)
    on left: 32 33, on right: 20 32
$@7 (85)
    on left: 31, on right: 32
more_var_identifiers (86)
    on left: 35 36, on right: 26 35
$@8 (87)
    on left: 34, on right: 35
function_and_procedure_block (88)
    on left: 37 38 39, on right: 4 37 38
procedure_block (89)
    on left: 41 43, on right: 38
$@9 (90)
    on left: 40, on right: 41
$@10 (91)
    on left: 42, on right: 43
param_list (92)
    on left: 44 45 46, on right: 43 45
function_block (93)
    on left: 48 50, on right: 37
$@11 (94)
    on left: 47, on right: 48
$@12 (95)
    on left: 49, on right: 50
function_param_list (96)
    on left: 53, on right: 50 55
$@13 (97)
    on left: 51, on right: 53
$@14 (98)
    on left: 52, on right: 53
function_param_continue (99)
    on left: 54 55, on right: 53
more_func_identifiers (100)
    on left: 57 58, on right: 53 57
$@15 (101)
    on left: 56, on right: 57
fp_block (102)
    on left: 59, on right: 41 43 48 50
execution_block (103)
    on left: 60, on right: 4 59
execution_body (104)
    on left: 61 62, on right: 60 61 70 75
statements (105)
    on left: 63 64 65, on right: 61 78 79
structured_statements (106)
    on left: 66 67, on right: 64
conditional_statement (107)
    on left: 70, on right: 66 74
$@16 (108)
    on left: 68, on right: 70
$@17 (109)
    on left: 69, on right: 70
if_then_follow (110)
    on left: 71 72 73, on right: 70
else_if_block (111)
    on left: 74, on right: 71
else_block (112)
    on left: 75, on right: 72
repetitive_statement (113)
    on left: 76 77, on right: 67
while_statement (114)
    on left: 78, on right: 77
for_statement (115)
    on left: 79, on right: 76
for_list (116)
    on left: 80 81, on right: 79
print_statements (117)
    on left: 82, on right: 65
assignment_statements (118)
    on left: 83 84, on right: 63 83
assignment_statement (119)
    on left: 86, on right: 83
@18 (120)
    on left: 85, on right: 86
value (121)
    on left: 87 88 89 90, on right: 92
expression (122)
    on left: 91 92 93 94, on right: 80 81 86 93 94 96
boolean_expression (123)
    on left: 96, on right: 70 78
$@19 (124)
    on left: 95, on right: 96
operator (125)
    on left: 97 98 99, on right: 94
assignment_ops (126)
    on left: 100 101 102 103 104, on right: 86
arithmetic_ops (127)
    on left: 105 106 107 108 109, on right: 97
relational_ops (128)
    on left: 110 111 112 113 114 115, on right: 96
boolean_ops (129)
    on left: 116 117 118, on right: 98
bitwise_ops (130)
    on left: 119 120 121 122 123 124, on right: 99
some_numeric_type (131)
    on left: 125 126, on right: 13 14
epsilon (132)
    on left: 127, on right: 7 10 12 15 17 21 23 27 33 36 39 46 54 58
    62 73 84


State 0

    0 $accept: . startPascal $end

    T_PROGRAM  shift, and go to state 1

    startPascal   go to state 2
    program       go to state 3
    prog_heading  go to state 4


State 1

    3 prog_heading: T_PROGRAM . T_IDENTIFIER ';'

    T_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: startPascal . $end

    $end  shift, and go to state 6


State 3

    1 startPascal: program .

    $default  reduce using rule 1 (startPascal)


State 4

    2 program: prog_heading . block '.'

    T_USES  shift, and go to state 7

    $default  reduce using rule 127 (epsilon)

    block       go to state 8
    uses_block  go to state 9
    epsilon     go to state 10


State 5

    3 prog_heading: T_PROGRAM T_IDENTIFIER . ';'

    ';'  shift, and go to state 11


State 6

    0 $accept: startPascal $end .

    $default  accept


State 7

    6 uses_block: T_USES . T_IDENTIFIER $@1 more_libs ';'

    T_IDENTIFIER  shift, and go to state 12


State 8

    2 program: prog_heading block . '.'

    '.'  shift, and go to state 13


State 9

    4 block: uses_block . constant_block type_block variable_block function_and_procedure_block execution_block

    T_CONST  shift, and go to state 14

    $default  reduce using rule 127 (epsilon)

    constant_block  go to state 15
    epsilon         go to state 16


State 10

    7 uses_block: epsilon .

    $default  reduce using rule 7 (uses_block)


State 11

    3 prog_heading: T_PROGRAM T_IDENTIFIER ';' .

    $default  reduce using rule 3 (prog_heading)


State 12

    6 uses_block: T_USES T_IDENTIFIER . $@1 more_libs ';'

    $default  reduce using rule 5 ($@1)

    $@1  go to state 17


State 13

    2 program: prog_heading block '.' .

    $default  reduce using rule 2 (program)


State 14

   11 constant_block: T_CONST . const_definition

    T_IDENTIFIER  shift, and go to state 18

    const_definition  go to state 19


State 15

    4 block: uses_block constant_block . type_block variable_block function_and_procedure_block execution_block

    T_TYPE  shift, and go to state 20

    $default  reduce using rule 127 (epsilon)

    type_block  go to state 21
    epsilon     go to state 22


State 16

   12 constant_block: epsilon .

    $default  reduce using rule 12 (constant_block)


State 17

    6 uses_block: T_USES T_IDENTIFIER $@1 . more_libs ';'

    ','  shift, and go to state 23

    $default  reduce using rule 127 (epsilon)

    more_libs  go to state 24
    epsilon    go to state 25


State 18

   13 const_definition: T_IDENTIFIER . T_SINGLEEQ some_numeric_type ';' more_const_definition

    T_SINGLEEQ  shift, and go to state 26


State 19

   11 constant_block: T_CONST const_definition .

    $default  reduce using rule 11 (constant_block)


State 20

   16 type_block: T_TYPE . type_definition

    T_IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 127 (epsilon)

    type_definition  go to state 28
    epsilon          go to state 29


State 21

    4 block: uses_block constant_block type_block . variable_block function_and_procedure_block execution_block

    T_VAR  shift, and go to state 30

    $default  reduce using rule 127 (epsilon)

    variable_block  go to state 31
    epsilon         go to state 32


State 22

   17 type_block: epsilon .

    $default  reduce using rule 17 (type_block)


State 23

    9 more_libs: ',' . T_IDENTIFIER $@2 more_libs

    T_IDENTIFIER  shift, and go to state 33


State 24

    6 uses_block: T_USES T_IDENTIFIER $@1 more_libs . ';'

    ';'  shift, and go to state 34


State 25

   10 more_libs: epsilon .

    $default  reduce using rule 10 (more_libs)


State 26

   13 const_definition: T_IDENTIFIER T_SINGLEEQ . some_numeric_type ';' more_const_definition

    T_INTVAL    shift, and go to state 35
    T_FLOATVAL  shift, and go to state 36

    some_numeric_type  go to state 37


State 27

   20 type_definition: T_IDENTIFIER . $@3 more_type_identifiers T_SINGLEEQ T_DATATYPE $@4 ';' type_definition

    $default  reduce using rule 18 ($@3)

    $@3  go to state 38


State 28

   16 type_block: T_TYPE type_definition .

    $default  reduce using rule 16 (type_block)


State 29

   21 type_definition: epsilon .

    $default  reduce using rule 21 (type_definition)


State 30

   22 variable_block: T_VAR . variable_declaration

    T_IDENTIFIER  shift, and go to state 39

    $default  reduce using rule 127 (epsilon)

    variable_declaration  go to state 40
    epsilon               go to state 41


State 31

    4 block: uses_block constant_block type_block variable_block . function_and_procedure_block execution_block

    T_PROCEDURE  shift, and go to state 42
    T_FUNCTION   shift, and go to state 43

    $default  reduce using rule 127 (epsilon)

    function_and_procedure_block  go to state 44
    procedure_block               go to state 45
    function_block                go to state 46
    epsilon                       go to state 47


State 32

   23 variable_block: epsilon .

    $default  reduce using rule 23 (variable_block)


State 33

    9 more_libs: ',' T_IDENTIFIER . $@2 more_libs

    $default  reduce using rule 8 ($@2)

    $@2  go to state 48


State 34

    6 uses_block: T_USES T_IDENTIFIER $@1 more_libs ';' .

    $default  reduce using rule 6 (uses_block)


State 35

  125 some_numeric_type: T_INTVAL .

    $default  reduce using rule 125 (some_numeric_type)


State 36

  126 some_numeric_type: T_FLOATVAL .

    $default  reduce using rule 126 (some_numeric_type)


State 37

   13 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type . ';' more_const_definition

    ';'  shift, and go to state 49


State 38

   20 type_definition: T_IDENTIFIER $@3 . more_type_identifiers T_SINGLEEQ T_DATATYPE $@4 ';' type_definition

    ','  shift, and go to state 50

    $default  reduce using rule 127 (epsilon)

    more_type_identifiers  go to state 51
    epsilon                go to state 52


State 39

   26 variable_declaration: T_IDENTIFIER . $@5 more_var_identifiers ':' data_type $@6 ';' variable_declaration

    $default  reduce using rule 24 ($@5)

    $@5  go to state 53


State 40

   22 variable_block: T_VAR variable_declaration .

    $default  reduce using rule 22 (variable_block)


State 41

   27 variable_declaration: epsilon .

    $default  reduce using rule 27 (variable_declaration)


State 42

   41 procedure_block: T_PROCEDURE . T_IDENTIFIER $@9 ';' fp_block ';'
   43                | T_PROCEDURE . T_IDENTIFIER $@10 '(' param_list ')' ';' fp_block ';'

    T_IDENTIFIER  shift, and go to state 54


State 43

   48 function_block: T_FUNCTION . T_IDENTIFIER $@11 ':' T_DATATYPE ';' fp_block ';'
   50               | T_FUNCTION . T_IDENTIFIER $@12 '(' function_param_list ')' ':' T_DATATYPE ';' fp_block ';'

    T_IDENTIFIER  shift, and go to state 55


State 44

    4 block: uses_block constant_block type_block variable_block function_and_procedure_block . execution_block

    T_BEGIN  shift, and go to state 56

    execution_block  go to state 57


State 45

   38 function_and_procedure_block: procedure_block . function_and_procedure_block

    T_PROCEDURE  shift, and go to state 42
    T_FUNCTION   shift, and go to state 43

    $default  reduce using rule 127 (epsilon)

    function_and_procedure_block  go to state 58
    procedure_block               go to state 45
    function_block                go to state 46
    epsilon                       go to state 47


State 46

   37 function_and_procedure_block: function_block . function_and_procedure_block

    T_PROCEDURE  shift, and go to state 42
    T_FUNCTION   shift, and go to state 43

    $default  reduce using rule 127 (epsilon)

    function_and_procedure_block  go to state 59
    procedure_block               go to state 45
    function_block                go to state 46
    epsilon                       go to state 47


State 47

   39 function_and_procedure_block: epsilon .

    $default  reduce using rule 39 (function_and_procedure_block)


State 48

    9 more_libs: ',' T_IDENTIFIER $@2 . more_libs

    ','  shift, and go to state 23

    $default  reduce using rule 127 (epsilon)

    more_libs  go to state 60
    epsilon    go to state 25


State 49

   13 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' . more_const_definition

    T_IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 127 (epsilon)

    more_const_definition  go to state 62
    epsilon                go to state 63


State 50

   32 more_type_identifiers: ',' . T_IDENTIFIER $@7 more_type_identifiers

    T_IDENTIFIER  shift, and go to state 64


State 51

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers . T_SINGLEEQ T_DATATYPE $@4 ';' type_definition

    T_SINGLEEQ  shift, and go to state 65


State 52

   33 more_type_identifiers: epsilon .

    $default  reduce using rule 33 (more_type_identifiers)


State 53

   26 variable_declaration: T_IDENTIFIER $@5 . more_var_identifiers ':' data_type $@6 ';' variable_declaration

    ','  shift, and go to state 66

    $default  reduce using rule 127 (epsilon)

    more_var_identifiers  go to state 67
    epsilon               go to state 68


State 54

   41 procedure_block: T_PROCEDURE T_IDENTIFIER . $@9 ';' fp_block ';'
   43                | T_PROCEDURE T_IDENTIFIER . $@10 '(' param_list ')' ';' fp_block ';'

    '('       reduce using rule 42 ($@10)
    $default  reduce using rule 40 ($@9)

    $@9   go to state 69
    $@10  go to state 70


State 55

   48 function_block: T_FUNCTION T_IDENTIFIER . $@11 ':' T_DATATYPE ';' fp_block ';'
   50               | T_FUNCTION T_IDENTIFIER . $@12 '(' function_param_list ')' ':' T_DATATYPE ';' fp_block ';'

    '('       reduce using rule 49 ($@12)
    $default  reduce using rule 47 ($@11)

    $@11  go to state 71
    $@12  go to state 72


State 56

   60 execution_block: T_BEGIN . execution_body T_END

    $default  reduce using rule 127 (epsilon)

    execution_body  go to state 73
    epsilon         go to state 74


State 57

    4 block: uses_block constant_block type_block variable_block function_and_procedure_block execution_block .

    $default  reduce using rule 4 (block)


State 58

   38 function_and_procedure_block: procedure_block function_and_procedure_block .

    $default  reduce using rule 38 (function_and_procedure_block)


State 59

   37 function_and_procedure_block: function_block function_and_procedure_block .

    $default  reduce using rule 37 (function_and_procedure_block)


State 60

    9 more_libs: ',' T_IDENTIFIER $@2 more_libs .

    $default  reduce using rule 9 (more_libs)


State 61

   14 more_const_definition: T_IDENTIFIER . T_SINGLEEQ some_numeric_type ';' more_const_definition

    T_SINGLEEQ  shift, and go to state 75


State 62

   13 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition .

    $default  reduce using rule 13 (const_definition)


State 63

   15 more_const_definition: epsilon .

    $default  reduce using rule 15 (more_const_definition)


State 64

   32 more_type_identifiers: ',' T_IDENTIFIER . $@7 more_type_identifiers

    $default  reduce using rule 31 ($@7)

    $@7  go to state 76


State 65

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers T_SINGLEEQ . T_DATATYPE $@4 ';' type_definition

    T_DATATYPE  shift, and go to state 77


State 66

   35 more_var_identifiers: ',' . T_IDENTIFIER $@8 more_var_identifiers

    T_IDENTIFIER  shift, and go to state 78


State 67

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers . ':' data_type $@6 ';' variable_declaration

    ':'  shift, and go to state 79


State 68

   36 more_var_identifiers: epsilon .

    $default  reduce using rule 36 (more_var_identifiers)


State 69

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@9 . ';' fp_block ';'

    ';'  shift, and go to state 80


State 70

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 . '(' param_list ')' ';' fp_block ';'

    '('  shift, and go to state 81


State 71

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 . ':' T_DATATYPE ';' fp_block ';'

    ':'  shift, and go to state 82


State 72

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 . '(' function_param_list ')' ':' T_DATATYPE ';' fp_block ';'

    '('  shift, and go to state 83


State 73

   60 execution_block: T_BEGIN execution_body . T_END
   61 execution_body: execution_body . statements

    T_WHILE       shift, and go to state 84
    T_IF          shift, and go to state 85
    T_END         shift, and go to state 86
    T_WRITELN     shift, and go to state 87
    T_FOR         shift, and go to state 88
    T_IDENTIFIER  shift, and go to state 89

    T_WHILE       [reduce using rule 127 (epsilon)]
    T_IF          [reduce using rule 127 (epsilon)]
    T_END         [reduce using rule 127 (epsilon)]
    T_WRITELN     [reduce using rule 127 (epsilon)]
    T_FOR         [reduce using rule 127 (epsilon)]
    T_IDENTIFIER  [reduce using rule 127 (epsilon)]

    statements             go to state 90
    structured_statements  go to state 91
    conditional_statement  go to state 92
    repetitive_statement   go to state 93
    while_statement        go to state 94
    for_statement          go to state 95
    print_statements       go to state 96
    assignment_statements  go to state 97
    assignment_statement   go to state 98
    epsilon                go to state 99


State 74

   62 execution_body: epsilon .

    $default  reduce using rule 62 (execution_body)


State 75

   14 more_const_definition: T_IDENTIFIER T_SINGLEEQ . some_numeric_type ';' more_const_definition

    T_INTVAL    shift, and go to state 35
    T_FLOATVAL  shift, and go to state 36

    some_numeric_type  go to state 100


State 76

   32 more_type_identifiers: ',' T_IDENTIFIER $@7 . more_type_identifiers

    ','  shift, and go to state 50

    $default  reduce using rule 127 (epsilon)

    more_type_identifiers  go to state 101
    epsilon                go to state 52


State 77

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers T_SINGLEEQ T_DATATYPE . $@4 ';' type_definition

    $default  reduce using rule 19 ($@4)

    $@4  go to state 102


State 78

   35 more_var_identifiers: ',' T_IDENTIFIER . $@8 more_var_identifiers

    $default  reduce using rule 34 ($@8)

    $@8  go to state 103


State 79

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers ':' . data_type $@6 ';' variable_declaration

    T_ARRAY       shift, and go to state 104
    T_IDENTIFIER  shift, and go to state 105
    T_DATATYPE    shift, and go to state 106

    data_type  go to state 107


State 80

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@9 ';' . fp_block ';'

    T_VAR  shift, and go to state 30

    $default  reduce using rule 127 (epsilon)

    variable_block  go to state 108
    fp_block        go to state 109
    epsilon         go to state 32


State 81

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' . param_list ')' ';' fp_block ';'

    T_IDENTIFIER  shift, and go to state 110

    $default  reduce using rule 127 (epsilon)

    param_list  go to state 111
    epsilon     go to state 112


State 82

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 ':' . T_DATATYPE ';' fp_block ';'

    T_DATATYPE  shift, and go to state 113


State 83

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' . function_param_list ')' ':' T_DATATYPE ';' fp_block ';'

    T_IDENTIFIER  shift, and go to state 114

    function_param_list  go to state 115


State 84

   78 while_statement: T_WHILE . '(' boolean_expression ')' T_DO statements

    '('  shift, and go to state 116


State 85

   70 conditional_statement: T_IF . '(' boolean_expression ')' $@16 T_THEN execution_body $@17 if_then_follow

    '('  shift, and go to state 117


State 86

   60 execution_block: T_BEGIN execution_body T_END .

    $default  reduce using rule 60 (execution_block)


State 87

   82 print_statements: T_WRITELN . '(' T_STRINGVAL ')' ';'

    '('  shift, and go to state 118


State 88

   79 for_statement: T_FOR . T_IDENTIFIER T_ASOP for_list T_DO statements

    T_IDENTIFIER  shift, and go to state 119


State 89

   86 assignment_statement: T_IDENTIFIER . @18 assignment_ops expression

    $default  reduce using rule 85 (@18)

    @18  go to state 120


State 90

   61 execution_body: execution_body statements .

    $default  reduce using rule 61 (execution_body)


State 91

   64 statements: structured_statements .

    $default  reduce using rule 64 (statements)


State 92

   66 structured_statements: conditional_statement .

    $default  reduce using rule 66 (structured_statements)


State 93

   67 structured_statements: repetitive_statement .

    $default  reduce using rule 67 (structured_statements)


State 94

   77 repetitive_statement: while_statement .

    $default  reduce using rule 77 (repetitive_statement)


State 95

   76 repetitive_statement: for_statement .

    $default  reduce using rule 76 (repetitive_statement)


State 96

   65 statements: print_statements .

    $default  reduce using rule 65 (statements)


State 97

   63 statements: assignment_statements .

    $default  reduce using rule 63 (statements)


State 98

   83 assignment_statements: assignment_statement . ';' assignment_statements

    ';'  shift, and go to state 121


State 99

   84 assignment_statements: epsilon .

    $default  reduce using rule 84 (assignment_statements)


State 100

   14 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type . ';' more_const_definition

    ';'  shift, and go to state 122


State 101

   32 more_type_identifiers: ',' T_IDENTIFIER $@7 more_type_identifiers .

    $default  reduce using rule 32 (more_type_identifiers)


State 102

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers T_SINGLEEQ T_DATATYPE $@4 . ';' type_definition

    ';'  shift, and go to state 123


State 103

   35 more_var_identifiers: ',' T_IDENTIFIER $@8 . more_var_identifiers

    ','  shift, and go to state 66

    $default  reduce using rule 127 (epsilon)

    more_var_identifiers  go to state 124
    epsilon               go to state 68


State 104

   30 data_type: T_ARRAY . '[' T_INDEXTYPE ']' T_OF T_DATATYPE

    '['  shift, and go to state 125


State 105

   29 data_type: T_IDENTIFIER .

    $default  reduce using rule 29 (data_type)


State 106

   28 data_type: T_DATATYPE .

    $default  reduce using rule 28 (data_type)


State 107

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers ':' data_type . $@6 ';' variable_declaration

    $default  reduce using rule 25 ($@6)

    $@6  go to state 126


State 108

   59 fp_block: variable_block . execution_block

    T_BEGIN  shift, and go to state 56

    execution_block  go to state 127


State 109

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@9 ';' fp_block . ';'

    ';'  shift, and go to state 128


State 110

   44 param_list: T_IDENTIFIER . ':' T_DATATYPE
   45           | T_IDENTIFIER . ':' T_DATATYPE ';' param_list

    ':'  shift, and go to state 129


State 111

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' param_list . ')' ';' fp_block ';'

    ')'  shift, and go to state 130


State 112

   46 param_list: epsilon .

    $default  reduce using rule 46 (param_list)


State 113

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 ':' T_DATATYPE . ';' fp_block ';'

    ';'  shift, and go to state 131


State 114

   53 function_param_list: T_IDENTIFIER . $@13 more_func_identifiers ':' T_DATATYPE $@14 function_param_continue

    $default  reduce using rule 51 ($@13)

    $@13  go to state 132


State 115

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list . ')' ':' T_DATATYPE ';' fp_block ';'

    ')'  shift, and go to state 133


State 116

   78 while_statement: T_WHILE '(' . boolean_expression ')' T_DO statements

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value               go to state 140
    expression          go to state 141
    boolean_expression  go to state 142


State 117

   70 conditional_statement: T_IF '(' . boolean_expression ')' $@16 T_THEN execution_body $@17 if_then_follow

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value               go to state 140
    expression          go to state 141
    boolean_expression  go to state 143


State 118

   82 print_statements: T_WRITELN '(' . T_STRINGVAL ')' ';'

    T_STRINGVAL  shift, and go to state 144


State 119

   79 for_statement: T_FOR T_IDENTIFIER . T_ASOP for_list T_DO statements

    T_ASOP  shift, and go to state 145


State 120

   86 assignment_statement: T_IDENTIFIER @18 . assignment_ops expression

    T_ASOP     shift, and go to state 146
    T_AS_PE    shift, and go to state 147
    T_AS_SE    shift, and go to state 148
    T_AS_MULE  shift, and go to state 149
    T_AS_DIVE  shift, and go to state 150

    assignment_ops  go to state 151


State 121

   83 assignment_statements: assignment_statement ';' . assignment_statements

    T_IDENTIFIER  shift, and go to state 89

    T_IDENTIFIER  [reduce using rule 127 (epsilon)]
    $default      reduce using rule 127 (epsilon)

    assignment_statements  go to state 152
    assignment_statement   go to state 98
    epsilon                go to state 99


State 122

   14 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' . more_const_definition

    T_IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 127 (epsilon)

    more_const_definition  go to state 153
    epsilon                go to state 63


State 123

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers T_SINGLEEQ T_DATATYPE $@4 ';' . type_definition

    T_IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 127 (epsilon)

    type_definition  go to state 154
    epsilon          go to state 29


State 124

   35 more_var_identifiers: ',' T_IDENTIFIER $@8 more_var_identifiers .

    $default  reduce using rule 35 (more_var_identifiers)


State 125

   30 data_type: T_ARRAY '[' . T_INDEXTYPE ']' T_OF T_DATATYPE

    T_INDEXTYPE  shift, and go to state 155


State 126

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers ':' data_type $@6 . ';' variable_declaration

    ';'  shift, and go to state 156


State 127

   59 fp_block: variable_block execution_block .

    $default  reduce using rule 59 (fp_block)


State 128

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@9 ';' fp_block ';' .

    $default  reduce using rule 41 (procedure_block)


State 129

   44 param_list: T_IDENTIFIER ':' . T_DATATYPE
   45           | T_IDENTIFIER ':' . T_DATATYPE ';' param_list

    T_DATATYPE  shift, and go to state 157


State 130

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' param_list ')' . ';' fp_block ';'

    ';'  shift, and go to state 158


State 131

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 ':' T_DATATYPE ';' . fp_block ';'

    T_VAR  shift, and go to state 30

    $default  reduce using rule 127 (epsilon)

    variable_block  go to state 108
    fp_block        go to state 159
    epsilon         go to state 32


State 132

   53 function_param_list: T_IDENTIFIER $@13 . more_func_identifiers ':' T_DATATYPE $@14 function_param_continue

    ','  shift, and go to state 160

    $default  reduce using rule 127 (epsilon)

    more_func_identifiers  go to state 161
    epsilon                go to state 162


State 133

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' . ':' T_DATATYPE ';' fp_block ';'

    ':'  shift, and go to state 163


State 134

   91 expression: T_IDENTIFIER .

    $default  reduce using rule 91 (expression)


State 135

   87 value: T_INTVAL .

    $default  reduce using rule 87 (value)


State 136

   88 value: T_FLOATVAL .

    $default  reduce using rule 88 (value)


State 137

   89 value: T_BOOLVAL .

    $default  reduce using rule 89 (value)


State 138

   90 value: T_STRINGVAL .

    $default  reduce using rule 90 (value)


State 139

   93 expression: '(' . expression ')'

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value       go to state 140
    expression  go to state 164


State 140

   92 expression: value .

    $default  reduce using rule 92 (expression)


State 141

   94 expression: expression . operator expression
   96 boolean_expression: expression . relational_ops expression $@19

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_REL_LE    shift, and go to state 168
    T_REL_GE    shift, and go to state 169
    T_REL_NE    shift, and go to state 170
    T_SINGLEEQ  shift, and go to state 171
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '>'         shift, and go to state 179
    '<'         shift, and go to state 180
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    operator        go to state 185
    arithmetic_ops  go to state 186
    relational_ops  go to state 187
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 142

   78 while_statement: T_WHILE '(' boolean_expression . ')' T_DO statements

    ')'  shift, and go to state 190


State 143

   70 conditional_statement: T_IF '(' boolean_expression . ')' $@16 T_THEN execution_body $@17 if_then_follow

    ')'  shift, and go to state 191


State 144

   82 print_statements: T_WRITELN '(' T_STRINGVAL . ')' ';'

    ')'  shift, and go to state 192


State 145

   79 for_statement: T_FOR T_IDENTIFIER T_ASOP . for_list T_DO statements

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    for_list    go to state 193
    value       go to state 140
    expression  go to state 194


State 146

  100 assignment_ops: T_ASOP .

    $default  reduce using rule 100 (assignment_ops)


State 147

  101 assignment_ops: T_AS_PE .

    $default  reduce using rule 101 (assignment_ops)


State 148

  102 assignment_ops: T_AS_SE .

    $default  reduce using rule 102 (assignment_ops)


State 149

  103 assignment_ops: T_AS_MULE .

    $default  reduce using rule 103 (assignment_ops)


State 150

  104 assignment_ops: T_AS_DIVE .

    $default  reduce using rule 104 (assignment_ops)


State 151

   86 assignment_statement: T_IDENTIFIER @18 assignment_ops . expression

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value       go to state 140
    expression  go to state 195


State 152

   83 assignment_statements: assignment_statement ';' assignment_statements .

    $default  reduce using rule 83 (assignment_statements)


State 153

   14 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition .

    $default  reduce using rule 14 (more_const_definition)


State 154

   20 type_definition: T_IDENTIFIER $@3 more_type_identifiers T_SINGLEEQ T_DATATYPE $@4 ';' type_definition .

    $default  reduce using rule 20 (type_definition)


State 155

   30 data_type: T_ARRAY '[' T_INDEXTYPE . ']' T_OF T_DATATYPE

    ']'  shift, and go to state 196


State 156

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers ':' data_type $@6 ';' . variable_declaration

    T_IDENTIFIER  shift, and go to state 39

    $default  reduce using rule 127 (epsilon)

    variable_declaration  go to state 197
    epsilon               go to state 41


State 157

   44 param_list: T_IDENTIFIER ':' T_DATATYPE .
   45           | T_IDENTIFIER ':' T_DATATYPE . ';' param_list

    ';'  shift, and go to state 198

    $default  reduce using rule 44 (param_list)


State 158

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' param_list ')' ';' . fp_block ';'

    T_VAR  shift, and go to state 30

    $default  reduce using rule 127 (epsilon)

    variable_block  go to state 108
    fp_block        go to state 199
    epsilon         go to state 32


State 159

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 ':' T_DATATYPE ';' fp_block . ';'

    ';'  shift, and go to state 200


State 160

   57 more_func_identifiers: ',' . T_IDENTIFIER $@15 more_func_identifiers

    T_IDENTIFIER  shift, and go to state 201


State 161

   53 function_param_list: T_IDENTIFIER $@13 more_func_identifiers . ':' T_DATATYPE $@14 function_param_continue

    ':'  shift, and go to state 202


State 162

   58 more_func_identifiers: epsilon .

    $default  reduce using rule 58 (more_func_identifiers)


State 163

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' ':' . T_DATATYPE ';' fp_block ';'

    T_DATATYPE  shift, and go to state 203


State 164

   93 expression: '(' expression . ')'
   94           | expression . operator expression

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    ')'         shift, and go to state 204
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 165

  116 boolean_ops: T_BOOL_AND .

    $default  reduce using rule 116 (boolean_ops)


State 166

  117 boolean_ops: T_BOOL_OR .

    $default  reduce using rule 117 (boolean_ops)


State 167

  118 boolean_ops: T_BOOL_NOT .

    $default  reduce using rule 118 (boolean_ops)


State 168

  113 relational_ops: T_REL_LE .

    $default  reduce using rule 113 (relational_ops)


State 169

  114 relational_ops: T_REL_GE .

    $default  reduce using rule 114 (relational_ops)


State 170

  115 relational_ops: T_REL_NE .

    $default  reduce using rule 115 (relational_ops)


State 171

  110 relational_ops: T_SINGLEEQ .

    $default  reduce using rule 110 (relational_ops)


State 172

  123 bitwise_ops: T_BIT_LS .

    $default  reduce using rule 123 (bitwise_ops)


State 173

  124 bitwise_ops: T_BIT_RS .

    $default  reduce using rule 124 (bitwise_ops)


State 174

  105 arithmetic_ops: '+' .

    $default  reduce using rule 105 (arithmetic_ops)


State 175

  108 arithmetic_ops: '-' .

    $default  reduce using rule 108 (arithmetic_ops)


State 176

  106 arithmetic_ops: '*' .

    $default  reduce using rule 106 (arithmetic_ops)


State 177

  107 arithmetic_ops: '/' .

    $default  reduce using rule 107 (arithmetic_ops)


State 178

  109 arithmetic_ops: '%' .

    $default  reduce using rule 109 (arithmetic_ops)


State 179

  111 relational_ops: '>' .

    $default  reduce using rule 111 (relational_ops)


State 180

  112 relational_ops: '<' .

    $default  reduce using rule 112 (relational_ops)


State 181

  119 bitwise_ops: '&' .

    $default  reduce using rule 119 (bitwise_ops)


State 182

  120 bitwise_ops: '|' .

    $default  reduce using rule 120 (bitwise_ops)


State 183

  121 bitwise_ops: '~' .

    $default  reduce using rule 121 (bitwise_ops)


State 184

  122 bitwise_ops: '!' .

    $default  reduce using rule 122 (bitwise_ops)


State 185

   94 expression: expression operator . expression

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value       go to state 140
    expression  go to state 205


State 186

   97 operator: arithmetic_ops .

    $default  reduce using rule 97 (operator)


State 187

   96 boolean_expression: expression relational_ops . expression $@19

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value       go to state 140
    expression  go to state 206


State 188

   98 operator: boolean_ops .

    $default  reduce using rule 98 (operator)


State 189

   99 operator: bitwise_ops .

    $default  reduce using rule 99 (operator)


State 190

   78 while_statement: T_WHILE '(' boolean_expression ')' . T_DO statements

    T_DO  shift, and go to state 207


State 191

   70 conditional_statement: T_IF '(' boolean_expression ')' . $@16 T_THEN execution_body $@17 if_then_follow

    $default  reduce using rule 68 ($@16)

    $@16  go to state 208


State 192

   82 print_statements: T_WRITELN '(' T_STRINGVAL ')' . ';'

    ';'  shift, and go to state 209


State 193

   79 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list . T_DO statements

    T_DO  shift, and go to state 210


State 194

   80 for_list: expression . T_TO expression
   81         | expression . T_DOWNTO expression
   94 expression: expression . operator expression

    T_TO        shift, and go to state 211
    T_DOWNTO    shift, and go to state 212
    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 195

   86 assignment_statement: T_IDENTIFIER @18 assignment_ops expression .
   94 expression: expression . operator expression

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    $default  reduce using rule 86 (assignment_statement)

    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 196

   30 data_type: T_ARRAY '[' T_INDEXTYPE ']' . T_OF T_DATATYPE

    T_OF  shift, and go to state 213


State 197

   26 variable_declaration: T_IDENTIFIER $@5 more_var_identifiers ':' data_type $@6 ';' variable_declaration .

    $default  reduce using rule 26 (variable_declaration)


State 198

   45 param_list: T_IDENTIFIER ':' T_DATATYPE ';' . param_list

    T_IDENTIFIER  shift, and go to state 110

    $default  reduce using rule 127 (epsilon)

    param_list  go to state 214
    epsilon     go to state 112


State 199

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' param_list ')' ';' fp_block . ';'

    ';'  shift, and go to state 215


State 200

   48 function_block: T_FUNCTION T_IDENTIFIER $@11 ':' T_DATATYPE ';' fp_block ';' .

    $default  reduce using rule 48 (function_block)


State 201

   57 more_func_identifiers: ',' T_IDENTIFIER . $@15 more_func_identifiers

    $default  reduce using rule 56 ($@15)

    $@15  go to state 216


State 202

   53 function_param_list: T_IDENTIFIER $@13 more_func_identifiers ':' . T_DATATYPE $@14 function_param_continue

    T_DATATYPE  shift, and go to state 217


State 203

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' ':' T_DATATYPE . ';' fp_block ';'

    ';'  shift, and go to state 218


State 204

   93 expression: '(' expression ')' .

    $default  reduce using rule 93 (expression)


State 205

   94 expression: expression . operator expression
   94           | expression operator expression .

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    T_BOOL_AND  [reduce using rule 94 (expression)]
    T_BOOL_OR   [reduce using rule 94 (expression)]
    T_BOOL_NOT  [reduce using rule 94 (expression)]
    T_BIT_LS    [reduce using rule 94 (expression)]
    T_BIT_RS    [reduce using rule 94 (expression)]
    '+'         [reduce using rule 94 (expression)]
    '-'         [reduce using rule 94 (expression)]
    '*'         [reduce using rule 94 (expression)]
    '/'         [reduce using rule 94 (expression)]
    '%'         [reduce using rule 94 (expression)]
    '&'         [reduce using rule 94 (expression)]
    '|'         [reduce using rule 94 (expression)]
    '~'         [reduce using rule 94 (expression)]
    '!'         [reduce using rule 94 (expression)]
    $default    reduce using rule 94 (expression)

    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 206

   94 expression: expression . operator expression
   96 boolean_expression: expression relational_ops expression . $@19

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    $default  reduce using rule 95 ($@19)

    $@19            go to state 219
    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 207

   78 while_statement: T_WHILE '(' boolean_expression ')' T_DO . statements

    T_WHILE       shift, and go to state 84
    T_IF          shift, and go to state 85
    T_WRITELN     shift, and go to state 87
    T_FOR         shift, and go to state 88
    T_IDENTIFIER  shift, and go to state 89

    T_WHILE       [reduce using rule 127 (epsilon)]
    T_IF          [reduce using rule 127 (epsilon)]
    T_WRITELN     [reduce using rule 127 (epsilon)]
    T_FOR         [reduce using rule 127 (epsilon)]
    T_IDENTIFIER  [reduce using rule 127 (epsilon)]
    $default      reduce using rule 127 (epsilon)

    statements             go to state 220
    structured_statements  go to state 91
    conditional_statement  go to state 92
    repetitive_statement   go to state 93
    while_statement        go to state 94
    for_statement          go to state 95
    print_statements       go to state 96
    assignment_statements  go to state 97
    assignment_statement   go to state 98
    epsilon                go to state 99


State 208

   70 conditional_statement: T_IF '(' boolean_expression ')' $@16 . T_THEN execution_body $@17 if_then_follow

    T_THEN  shift, and go to state 221


State 209

   82 print_statements: T_WRITELN '(' T_STRINGVAL ')' ';' .

    $default  reduce using rule 82 (print_statements)


State 210

   79 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list T_DO . statements

    T_WHILE       shift, and go to state 84
    T_IF          shift, and go to state 85
    T_WRITELN     shift, and go to state 87
    T_FOR         shift, and go to state 88
    T_IDENTIFIER  shift, and go to state 89

    T_WHILE       [reduce using rule 127 (epsilon)]
    T_IF          [reduce using rule 127 (epsilon)]
    T_WRITELN     [reduce using rule 127 (epsilon)]
    T_FOR         [reduce using rule 127 (epsilon)]
    T_IDENTIFIER  [reduce using rule 127 (epsilon)]
    $default      reduce using rule 127 (epsilon)

    statements             go to state 222
    structured_statements  go to state 91
    conditional_statement  go to state 92
    repetitive_statement   go to state 93
    while_statement        go to state 94
    for_statement          go to state 95
    print_statements       go to state 96
    assignment_statements  go to state 97
    assignment_statement   go to state 98
    epsilon                go to state 99


State 211

   80 for_list: expression T_TO . expression

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value       go to state 140
    expression  go to state 223


State 212

   81 for_list: expression T_DOWNTO . expression

    T_IDENTIFIER  shift, and go to state 134
    T_INTVAL      shift, and go to state 135
    T_FLOATVAL    shift, and go to state 136
    T_BOOLVAL     shift, and go to state 137
    T_STRINGVAL   shift, and go to state 138
    '('           shift, and go to state 139

    value       go to state 140
    expression  go to state 224


State 213

   30 data_type: T_ARRAY '[' T_INDEXTYPE ']' T_OF . T_DATATYPE

    T_DATATYPE  shift, and go to state 225


State 214

   45 param_list: T_IDENTIFIER ':' T_DATATYPE ';' param_list .

    $default  reduce using rule 45 (param_list)


State 215

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@10 '(' param_list ')' ';' fp_block ';' .

    $default  reduce using rule 43 (procedure_block)


State 216

   57 more_func_identifiers: ',' T_IDENTIFIER $@15 . more_func_identifiers

    ','  shift, and go to state 160

    $default  reduce using rule 127 (epsilon)

    more_func_identifiers  go to state 226
    epsilon                go to state 162


State 217

   53 function_param_list: T_IDENTIFIER $@13 more_func_identifiers ':' T_DATATYPE . $@14 function_param_continue

    $default  reduce using rule 52 ($@14)

    $@14  go to state 227


State 218

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' ':' T_DATATYPE ';' . fp_block ';'

    T_VAR  shift, and go to state 30

    $default  reduce using rule 127 (epsilon)

    variable_block  go to state 108
    fp_block        go to state 228
    epsilon         go to state 32


State 219

   96 boolean_expression: expression relational_ops expression $@19 .

    $default  reduce using rule 96 (boolean_expression)


State 220

   78 while_statement: T_WHILE '(' boolean_expression ')' T_DO statements .

    $default  reduce using rule 78 (while_statement)


State 221

   70 conditional_statement: T_IF '(' boolean_expression ')' $@16 T_THEN . execution_body $@17 if_then_follow

    $default  reduce using rule 127 (epsilon)

    execution_body  go to state 229
    epsilon         go to state 74


State 222

   79 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list T_DO statements .

    $default  reduce using rule 79 (for_statement)


State 223

   80 for_list: expression T_TO expression .
   94 expression: expression . operator expression

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    $default  reduce using rule 80 (for_list)

    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 224

   81 for_list: expression T_DOWNTO expression .
   94 expression: expression . operator expression

    T_BOOL_AND  shift, and go to state 165
    T_BOOL_OR   shift, and go to state 166
    T_BOOL_NOT  shift, and go to state 167
    T_BIT_LS    shift, and go to state 172
    T_BIT_RS    shift, and go to state 173
    '+'         shift, and go to state 174
    '-'         shift, and go to state 175
    '*'         shift, and go to state 176
    '/'         shift, and go to state 177
    '%'         shift, and go to state 178
    '&'         shift, and go to state 181
    '|'         shift, and go to state 182
    '~'         shift, and go to state 183
    '!'         shift, and go to state 184

    $default  reduce using rule 81 (for_list)

    operator        go to state 185
    arithmetic_ops  go to state 186
    boolean_ops     go to state 188
    bitwise_ops     go to state 189


State 225

   30 data_type: T_ARRAY '[' T_INDEXTYPE ']' T_OF T_DATATYPE .

    $default  reduce using rule 30 (data_type)


State 226

   57 more_func_identifiers: ',' T_IDENTIFIER $@15 more_func_identifiers .

    $default  reduce using rule 57 (more_func_identifiers)


State 227

   53 function_param_list: T_IDENTIFIER $@13 more_func_identifiers ':' T_DATATYPE $@14 . function_param_continue

    ';'  shift, and go to state 230

    $default  reduce using rule 127 (epsilon)

    function_param_continue  go to state 231
    epsilon                  go to state 232


State 228

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' ':' T_DATATYPE ';' fp_block . ';'

    ';'  shift, and go to state 233


State 229

   61 execution_body: execution_body . statements
   70 conditional_statement: T_IF '(' boolean_expression ')' $@16 T_THEN execution_body . $@17 if_then_follow

    T_WHILE       shift, and go to state 84
    T_IF          shift, and go to state 85
    T_WRITELN     shift, and go to state 87
    T_FOR         shift, and go to state 88
    T_IDENTIFIER  shift, and go to state 89

    T_WHILE       [reduce using rule 69 ($@17)]
    T_WHILE       [reduce using rule 127 (epsilon)]
    T_IF          [reduce using rule 69 ($@17)]
    T_IF          [reduce using rule 127 (epsilon)]
    T_ELSE        reduce using rule 69 ($@17)
    T_ELSE        [reduce using rule 127 (epsilon)]
    T_END         reduce using rule 69 ($@17)
    T_END         [reduce using rule 127 (epsilon)]
    T_WRITELN     [reduce using rule 69 ($@17)]
    T_WRITELN     [reduce using rule 127 (epsilon)]
    T_FOR         [reduce using rule 69 ($@17)]
    T_FOR         [reduce using rule 127 (epsilon)]
    T_IDENTIFIER  [reduce using rule 69 ($@17)]
    T_IDENTIFIER  [reduce using rule 127 (epsilon)]
    $default      reduce using rule 69 ($@17)

    statements             go to state 90
    structured_statements  go to state 91
    conditional_statement  go to state 92
    $@17                   go to state 234
    repetitive_statement   go to state 93
    while_statement        go to state 94
    for_statement          go to state 95
    print_statements       go to state 96
    assignment_statements  go to state 97
    assignment_statement   go to state 98
    epsilon                go to state 99


State 230

   55 function_param_continue: ';' . function_param_list

    T_IDENTIFIER  shift, and go to state 114

    function_param_list  go to state 235


State 231

   53 function_param_list: T_IDENTIFIER $@13 more_func_identifiers ':' T_DATATYPE $@14 function_param_continue .

    $default  reduce using rule 53 (function_param_list)


State 232

   54 function_param_continue: epsilon .

    $default  reduce using rule 54 (function_param_continue)


State 233

   50 function_block: T_FUNCTION T_IDENTIFIER $@12 '(' function_param_list ')' ':' T_DATATYPE ';' fp_block ';' .

    $default  reduce using rule 50 (function_block)


State 234

   70 conditional_statement: T_IF '(' boolean_expression ')' $@16 T_THEN execution_body $@17 . if_then_follow

    T_ELSE  shift, and go to state 236

    T_ELSE    [reduce using rule 127 (epsilon)]
    $default  reduce using rule 127 (epsilon)

    if_then_follow  go to state 237
    else_if_block   go to state 238
    else_block      go to state 239
    epsilon         go to state 240


State 235

   55 function_param_continue: ';' function_param_list .

    $default  reduce using rule 55 (function_param_continue)


State 236

   74 else_if_block: T_ELSE . conditional_statement
   75 else_block: T_ELSE . execution_body

    T_IF  shift, and go to state 85

    T_IF      [reduce using rule 127 (epsilon)]
    $default  reduce using rule 127 (epsilon)

    execution_body         go to state 241
    conditional_statement  go to state 242
    epsilon                go to state 74


State 237

   70 conditional_statement: T_IF '(' boolean_expression ')' $@16 T_THEN execution_body $@17 if_then_follow .

    $default  reduce using rule 70 (conditional_statement)


State 238

   71 if_then_follow: else_if_block .

    $default  reduce using rule 71 (if_then_follow)


State 239

   72 if_then_follow: else_block .

    $default  reduce using rule 72 (if_then_follow)


State 240

   73 if_then_follow: epsilon .

    $default  reduce using rule 73 (if_then_follow)


State 241

   61 execution_body: execution_body . statements
   75 else_block: T_ELSE execution_body .

    T_WHILE       shift, and go to state 84
    T_IF          shift, and go to state 85
    T_WRITELN     shift, and go to state 87
    T_FOR         shift, and go to state 88
    T_IDENTIFIER  shift, and go to state 89

    T_WHILE       [reduce using rule 75 (else_block)]
    T_WHILE       [reduce using rule 127 (epsilon)]
    T_IF          [reduce using rule 75 (else_block)]
    T_IF          [reduce using rule 127 (epsilon)]
    T_ELSE        reduce using rule 75 (else_block)
    T_ELSE        [reduce using rule 127 (epsilon)]
    T_END         reduce using rule 75 (else_block)
    T_END         [reduce using rule 127 (epsilon)]
    T_WRITELN     [reduce using rule 75 (else_block)]
    T_WRITELN     [reduce using rule 127 (epsilon)]
    T_FOR         [reduce using rule 75 (else_block)]
    T_FOR         [reduce using rule 127 (epsilon)]
    T_IDENTIFIER  [reduce using rule 75 (else_block)]
    T_IDENTIFIER  [reduce using rule 127 (epsilon)]
    $default      reduce using rule 75 (else_block)

    statements             go to state 90
    structured_statements  go to state 91
    conditional_statement  go to state 92
    repetitive_statement   go to state 93
    while_statement        go to state 94
    for_statement          go to state 95
    print_statements       go to state 96
    assignment_statements  go to state 97
    assignment_statement   go to state 98
    epsilon                go to state 99


State 242

   74 else_if_block: T_ELSE conditional_statement .

    $default  reduce using rule 74 (else_if_block)
