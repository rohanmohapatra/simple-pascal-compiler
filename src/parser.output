Terminals unused in grammar

   T_IF
   T_ARRAY


State 55 conflicts: 4 shift/reduce, 1 reduce/reduce
State 76 conflicts: 4 shift/reduce, 1 reduce/reduce
State 81 conflicts: 4 shift/reduce, 1 reduce/reduce
State 82 conflicts: 4 shift/reduce, 1 reduce/reduce
State 84 conflicts: 6 reduce/reduce
State 118 conflicts: 1 shift/reduce
State 135 conflicts: 4 shift/reduce, 1 reduce/reduce
State 178 conflicts: 20 shift/reduce
State 192 conflicts: 4 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: startPascal $end

    1 startPascal: program

    2 program: prog_heading block '.'

    3 prog_heading: T_PROGRAM T_IDENTIFIER ';'

    4 block: uses_block constant_block type_block variable_block function_and_procedure_block execution_block

    5 uses_block: T_USES T_IDENTIFIER more_libs ';'
    6           | epsilon

    7 more_libs: ',' T_IDENTIFIER more_libs
    8          | epsilon

    9 constant_block: T_CONST const_definition
   10               | epsilon

   11 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition

   12 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition
   13                      | epsilon

   14 type_block: T_TYPE type_definition
   15           | epsilon

   16 $@1: %empty

   17 $@2: %empty

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition
   19                | epsilon

   20 variable_block: T_VAR variable_declaration
   21               | epsilon

   22 $@3: %empty

   23 variable_declaration: T_IDENTIFIER $@3 more_var_identifiers ':' data_type ';' variable_declaration
   24                     | epsilon

   25 data_type: T_DATATYPE
   26          | T_IDENTIFIER

   27 $@4: %empty

   28 more_type_identifiers: ',' T_IDENTIFIER $@4 more_type_identifiers
   29                      | epsilon

   30 $@5: %empty

   31 more_var_identifiers: ',' T_IDENTIFIER $@5 more_var_identifiers
   32                     | epsilon

   33 function_and_procedure_block: function_block function_and_procedure_block
   34                             | procedure_block function_and_procedure_block
   35                             | epsilon

   36 procedure_block: T_PROCEDURE T_IDENTIFIER ';' block ';'
   37                | T_PROCEDURE T_IDENTIFIER '(' param_list ')' ';' block ';'

   38 param_list: T_IDENTIFIER ':' T_DATATYPE
   39           | T_IDENTIFIER ':' T_DATATYPE ';' param_list
   40           | epsilon

   41 function_block: T_FUNCTION T_IDENTIFIER ':' T_DATATYPE ';' block ';'
   42               | T_FUNCTION T_IDENTIFIER '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

   43 function_param_list: T_IDENTIFIER more_func_identifiers ':' T_DATATYPE
   44                    | T_IDENTIFIER more_func_identifiers ':' T_DATATYPE ';' function_param_list

   45 more_func_identifiers: ',' T_IDENTIFIER more_func_identifiers
   46                      | epsilon

   47 execution_block: T_BEGIN execution_body T_END

   48 execution_body: assignment_statements execution_body
   49               | print_statements execution_body
   50               | structured_statements execution_body
   51               | epsilon

   52 structured_statements: conditional_statement ';'
   53                      | repetitive_statement

   54 conditional_statement: %empty

   55 repetitive_statement: for_statement
   56                     | while_statement

   57 while_statement: T_WHILE expression T_DO execution_body

   58 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list T_DO execution_body

   59 for_list: expression T_TO expression
   60         | expression T_DOWNTO expression

   61 print_statements: T_WRITELN '(' T_STRINGVAL ')' ';'

   62 assignment_statements: assignment_statement ';' assignment_statements
   63                      | epsilon

   64 assignment_statement: T_IDENTIFIER assignment_ops expression

   65 value: T_INTVAL
   66      | T_FLOATVAL
   67      | T_BOOLVAL
   68      | T_STRINGVAL

   69 expression: T_IDENTIFIER
   70           | value
   71           | '(' expression ')'
   72           | expression operator expression

   73 operator: arithmetic_ops
   74         | relational_ops
   75         | boolean_ops
   76         | bitwise_ops

   77 assignment_ops: T_ASOP
   78               | T_AS_PE
   79               | T_AS_SE
   80               | T_AS_MULE
   81               | T_AS_DIVE

   82 arithmetic_ops: '+'
   83               | '*'
   84               | '/'
   85               | '-'
   86               | '%'

   87 relational_ops: T_SINGLEEQ
   88               | '>'
   89               | '<'
   90               | T_REL_LE
   91               | T_REL_GE
   92               | T_REL_NE

   93 boolean_ops: T_BOOL_AND
   94            | T_BOOL_OR
   95            | T_BOOL_NOT

   96 bitwise_ops: '&'
   97            | '|'
   98            | '~'
   99            | '!'
  100            | T_BIT_LS
  101            | T_BIT_RS

  102 some_numeric_type: T_INTVAL
  103                  | T_FLOATVAL

  104 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 99
'%' (37) 86
'&' (38) 96
'(' (40) 37 42 61 71
')' (41) 37 42 61 71
'*' (42) 83
'+' (43) 82
',' (44) 7 28 31 45
'-' (45) 85
'.' (46) 2
'/' (47) 84
':' (58) 23 38 39 41 42 43 44
';' (59) 3 5 11 12 18 23 36 37 39 41 42 44 52 61 62
'<' (60) 89
'>' (62) 88
'|' (124) 97
'~' (126) 98
error (256)
T_USES (258) 5
T_WHILE (259) 57
T_PROGRAM (260) 3
T_VAR (261) 20
T_TYPE (262) 14
T_IF (263)
T_BEGIN (264) 47
T_END (265) 47
T_CONST (266) 9
T_WRITELN (267) 61
T_PROCEDURE (268) 36 37
T_FUNCTION (269) 41 42
T_FOR (270) 58
T_DO (271) 57 58
T_TO (272) 59
T_DOWNTO (273) 60
T_BOOL_AND (274) 93
T_BOOL_OR (275) 94
T_BOOL_NOT (276) 95
T_REL_LE (277) 90
T_REL_GE (278) 91
T_REL_NE (279) 92
T_SINGLEEQ (280) 11 12 18 87
T_BIT_LS (281) 100
T_BIT_RS (282) 101
T_ASOP (283) 58 77
T_AS_PE (284) 78
T_AS_SE (285) 79
T_AS_MULE (286) 80
T_AS_DIVE (287) 81
T_ARRAY (288)
T_IDENTIFIER (289) 3 5 7 11 12 18 23 26 28 31 36 37 38 39 41 42 43
    44 45 58 64 69
T_DATATYPE (290) 18 25 38 39 41 42 43 44
T_INTVAL (291) 65 102
T_FLOATVAL (292) 66 103
T_BOOLVAL (293) 67
T_STRINGVAL (294) 61 68


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
startPascal (58)
    on left: 1, on right: 0
program (59)
    on left: 2, on right: 1
prog_heading (60)
    on left: 3, on right: 2
block (61)
    on left: 4, on right: 2 36 37 41 42
uses_block (62)
    on left: 5 6, on right: 4
more_libs (63)
    on left: 7 8, on right: 5 7
constant_block (64)
    on left: 9 10, on right: 4
const_definition (65)
    on left: 11, on right: 9
more_const_definition (66)
    on left: 12 13, on right: 11 12
type_block (67)
    on left: 14 15, on right: 4
type_definition (68)
    on left: 18 19, on right: 14 18
$@1 (69)
    on left: 16, on right: 18
$@2 (70)
    on left: 17, on right: 18
variable_block (71)
    on left: 20 21, on right: 4
variable_declaration (72)
    on left: 23 24, on right: 20 23
$@3 (73)
    on left: 22, on right: 23
data_type (74)
    on left: 25 26, on right: 23
more_type_identifiers (75)
    on left: 28 29, on right: 18 28
$@4 (76)
    on left: 27, on right: 28
more_var_identifiers (77)
    on left: 31 32, on right: 23 31
$@5 (78)
    on left: 30, on right: 31
function_and_procedure_block (79)
    on left: 33 34 35, on right: 4 33 34
procedure_block (80)
    on left: 36 37, on right: 34
param_list (81)
    on left: 38 39 40, on right: 37 39
function_block (82)
    on left: 41 42, on right: 33
function_param_list (83)
    on left: 43 44, on right: 42 44
more_func_identifiers (84)
    on left: 45 46, on right: 43 44 45
execution_block (85)
    on left: 47, on right: 4
execution_body (86)
    on left: 48 49 50 51, on right: 47 48 49 50 57 58
structured_statements (87)
    on left: 52 53, on right: 50
conditional_statement (88)
    on left: 54, on right: 52
repetitive_statement (89)
    on left: 55 56, on right: 53
while_statement (90)
    on left: 57, on right: 56
for_statement (91)
    on left: 58, on right: 55
for_list (92)
    on left: 59 60, on right: 58
print_statements (93)
    on left: 61, on right: 49
assignment_statements (94)
    on left: 62 63, on right: 48 62
assignment_statement (95)
    on left: 64, on right: 62
value (96)
    on left: 65 66 67 68, on right: 70
expression (97)
    on left: 69 70 71 72, on right: 57 59 60 64 71 72
operator (98)
    on left: 73 74 75 76, on right: 72
assignment_ops (99)
    on left: 77 78 79 80 81, on right: 64
arithmetic_ops (100)
    on left: 82 83 84 85 86, on right: 73
relational_ops (101)
    on left: 87 88 89 90 91 92, on right: 74
boolean_ops (102)
    on left: 93 94 95, on right: 75
bitwise_ops (103)
    on left: 96 97 98 99 100 101, on right: 76
some_numeric_type (104)
    on left: 102 103, on right: 11 12
epsilon (105)
    on left: 104, on right: 6 8 10 13 15 19 21 24 29 32 35 40 46 51
    63


State 0

    0 $accept: . startPascal $end

    T_PROGRAM  shift, and go to state 1

    startPascal   go to state 2
    program       go to state 3
    prog_heading  go to state 4


State 1

    3 prog_heading: T_PROGRAM . T_IDENTIFIER ';'

    T_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: startPascal . $end

    $end  shift, and go to state 6


State 3

    1 startPascal: program .

    $default  reduce using rule 1 (startPascal)


State 4

    2 program: prog_heading . block '.'

    T_USES  shift, and go to state 7

    $default  reduce using rule 104 (epsilon)

    block       go to state 8
    uses_block  go to state 9
    epsilon     go to state 10


State 5

    3 prog_heading: T_PROGRAM T_IDENTIFIER . ';'

    ';'  shift, and go to state 11


State 6

    0 $accept: startPascal $end .

    $default  accept


State 7

    5 uses_block: T_USES . T_IDENTIFIER more_libs ';'

    T_IDENTIFIER  shift, and go to state 12


State 8

    2 program: prog_heading block . '.'

    '.'  shift, and go to state 13


State 9

    4 block: uses_block . constant_block type_block variable_block function_and_procedure_block execution_block

    T_CONST  shift, and go to state 14

    $default  reduce using rule 104 (epsilon)

    constant_block  go to state 15
    epsilon         go to state 16


State 10

    6 uses_block: epsilon .

    $default  reduce using rule 6 (uses_block)


State 11

    3 prog_heading: T_PROGRAM T_IDENTIFIER ';' .

    $default  reduce using rule 3 (prog_heading)


State 12

    5 uses_block: T_USES T_IDENTIFIER . more_libs ';'

    ','  shift, and go to state 17

    $default  reduce using rule 104 (epsilon)

    more_libs  go to state 18
    epsilon    go to state 19


State 13

    2 program: prog_heading block '.' .

    $default  reduce using rule 2 (program)


State 14

    9 constant_block: T_CONST . const_definition

    T_IDENTIFIER  shift, and go to state 20

    const_definition  go to state 21


State 15

    4 block: uses_block constant_block . type_block variable_block function_and_procedure_block execution_block

    T_TYPE  shift, and go to state 22

    $default  reduce using rule 104 (epsilon)

    type_block  go to state 23
    epsilon     go to state 24


State 16

   10 constant_block: epsilon .

    $default  reduce using rule 10 (constant_block)


State 17

    7 more_libs: ',' . T_IDENTIFIER more_libs

    T_IDENTIFIER  shift, and go to state 25


State 18

    5 uses_block: T_USES T_IDENTIFIER more_libs . ';'

    ';'  shift, and go to state 26


State 19

    8 more_libs: epsilon .

    $default  reduce using rule 8 (more_libs)


State 20

   11 const_definition: T_IDENTIFIER . T_SINGLEEQ some_numeric_type ';' more_const_definition

    T_SINGLEEQ  shift, and go to state 27


State 21

    9 constant_block: T_CONST const_definition .

    $default  reduce using rule 9 (constant_block)


State 22

   14 type_block: T_TYPE . type_definition

    T_IDENTIFIER  shift, and go to state 28

    $default  reduce using rule 104 (epsilon)

    type_definition  go to state 29
    epsilon          go to state 30


State 23

    4 block: uses_block constant_block type_block . variable_block function_and_procedure_block execution_block

    T_VAR  shift, and go to state 31

    $default  reduce using rule 104 (epsilon)

    variable_block  go to state 32
    epsilon         go to state 33


State 24

   15 type_block: epsilon .

    $default  reduce using rule 15 (type_block)


State 25

    7 more_libs: ',' T_IDENTIFIER . more_libs

    ','  shift, and go to state 17

    $default  reduce using rule 104 (epsilon)

    more_libs  go to state 34
    epsilon    go to state 19


State 26

    5 uses_block: T_USES T_IDENTIFIER more_libs ';' .

    $default  reduce using rule 5 (uses_block)


State 27

   11 const_definition: T_IDENTIFIER T_SINGLEEQ . some_numeric_type ';' more_const_definition

    T_INTVAL    shift, and go to state 35
    T_FLOATVAL  shift, and go to state 36

    some_numeric_type  go to state 37


State 28

   18 type_definition: T_IDENTIFIER . $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition

    $default  reduce using rule 16 ($@1)

    $@1  go to state 38


State 29

   14 type_block: T_TYPE type_definition .

    $default  reduce using rule 14 (type_block)


State 30

   19 type_definition: epsilon .

    $default  reduce using rule 19 (type_definition)


State 31

   20 variable_block: T_VAR . variable_declaration

    T_IDENTIFIER  shift, and go to state 39

    $default  reduce using rule 104 (epsilon)

    variable_declaration  go to state 40
    epsilon               go to state 41


State 32

    4 block: uses_block constant_block type_block variable_block . function_and_procedure_block execution_block

    T_PROCEDURE  shift, and go to state 42
    T_FUNCTION   shift, and go to state 43

    $default  reduce using rule 104 (epsilon)

    function_and_procedure_block  go to state 44
    procedure_block               go to state 45
    function_block                go to state 46
    epsilon                       go to state 47


State 33

   21 variable_block: epsilon .

    $default  reduce using rule 21 (variable_block)


State 34

    7 more_libs: ',' T_IDENTIFIER more_libs .

    $default  reduce using rule 7 (more_libs)


State 35

  102 some_numeric_type: T_INTVAL .

    $default  reduce using rule 102 (some_numeric_type)


State 36

  103 some_numeric_type: T_FLOATVAL .

    $default  reduce using rule 103 (some_numeric_type)


State 37

   11 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type . ';' more_const_definition

    ';'  shift, and go to state 48


State 38

   18 type_definition: T_IDENTIFIER $@1 . more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition

    ','  shift, and go to state 49

    $default  reduce using rule 104 (epsilon)

    more_type_identifiers  go to state 50
    epsilon                go to state 51


State 39

   23 variable_declaration: T_IDENTIFIER . $@3 more_var_identifiers ':' data_type ';' variable_declaration

    $default  reduce using rule 22 ($@3)

    $@3  go to state 52


State 40

   20 variable_block: T_VAR variable_declaration .

    $default  reduce using rule 20 (variable_block)


State 41

   24 variable_declaration: epsilon .

    $default  reduce using rule 24 (variable_declaration)


State 42

   36 procedure_block: T_PROCEDURE . T_IDENTIFIER ';' block ';'
   37                | T_PROCEDURE . T_IDENTIFIER '(' param_list ')' ';' block ';'

    T_IDENTIFIER  shift, and go to state 53


State 43

   41 function_block: T_FUNCTION . T_IDENTIFIER ':' T_DATATYPE ';' block ';'
   42               | T_FUNCTION . T_IDENTIFIER '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

    T_IDENTIFIER  shift, and go to state 54


State 44

    4 block: uses_block constant_block type_block variable_block function_and_procedure_block . execution_block

    T_BEGIN  shift, and go to state 55

    execution_block  go to state 56


State 45

   34 function_and_procedure_block: procedure_block . function_and_procedure_block

    T_PROCEDURE  shift, and go to state 42
    T_FUNCTION   shift, and go to state 43

    $default  reduce using rule 104 (epsilon)

    function_and_procedure_block  go to state 57
    procedure_block               go to state 45
    function_block                go to state 46
    epsilon                       go to state 47


State 46

   33 function_and_procedure_block: function_block . function_and_procedure_block

    T_PROCEDURE  shift, and go to state 42
    T_FUNCTION   shift, and go to state 43

    $default  reduce using rule 104 (epsilon)

    function_and_procedure_block  go to state 58
    procedure_block               go to state 45
    function_block                go to state 46
    epsilon                       go to state 47


State 47

   35 function_and_procedure_block: epsilon .

    $default  reduce using rule 35 (function_and_procedure_block)


State 48

   11 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' . more_const_definition

    T_IDENTIFIER  shift, and go to state 59

    $default  reduce using rule 104 (epsilon)

    more_const_definition  go to state 60
    epsilon                go to state 61


State 49

   28 more_type_identifiers: ',' . T_IDENTIFIER $@4 more_type_identifiers

    T_IDENTIFIER  shift, and go to state 62


State 50

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers . T_SINGLEEQ T_DATATYPE $@2 ';' type_definition

    T_SINGLEEQ  shift, and go to state 63


State 51

   29 more_type_identifiers: epsilon .

    $default  reduce using rule 29 (more_type_identifiers)


State 52

   23 variable_declaration: T_IDENTIFIER $@3 . more_var_identifiers ':' data_type ';' variable_declaration

    ','  shift, and go to state 64

    $default  reduce using rule 104 (epsilon)

    more_var_identifiers  go to state 65
    epsilon               go to state 66


State 53

   36 procedure_block: T_PROCEDURE T_IDENTIFIER . ';' block ';'
   37                | T_PROCEDURE T_IDENTIFIER . '(' param_list ')' ';' block ';'

    ';'  shift, and go to state 67
    '('  shift, and go to state 68


State 54

   41 function_block: T_FUNCTION T_IDENTIFIER . ':' T_DATATYPE ';' block ';'
   42               | T_FUNCTION T_IDENTIFIER . '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

    ':'  shift, and go to state 69
    '('  shift, and go to state 70


State 55

   47 execution_block: T_BEGIN . execution_body T_END

    T_WHILE       shift, and go to state 71
    T_WRITELN     shift, and go to state 72
    T_FOR         shift, and go to state 73
    T_IDENTIFIER  shift, and go to state 74

    T_WHILE       [reduce using rule 104 (epsilon)]
    T_END         reduce using rule 104 (epsilon)
    T_WRITELN     [reduce using rule 104 (epsilon)]
    T_FOR         [reduce using rule 104 (epsilon)]
    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    ';'           reduce using rule 54 (conditional_statement)
    ';'           [reduce using rule 104 (epsilon)]
    $default      reduce using rule 54 (conditional_statement)

    execution_body         go to state 75
    structured_statements  go to state 76
    conditional_statement  go to state 77
    repetitive_statement   go to state 78
    while_statement        go to state 79
    for_statement          go to state 80
    print_statements       go to state 81
    assignment_statements  go to state 82
    assignment_statement   go to state 83
    epsilon                go to state 84


State 56

    4 block: uses_block constant_block type_block variable_block function_and_procedure_block execution_block .

    $default  reduce using rule 4 (block)


State 57

   34 function_and_procedure_block: procedure_block function_and_procedure_block .

    $default  reduce using rule 34 (function_and_procedure_block)


State 58

   33 function_and_procedure_block: function_block function_and_procedure_block .

    $default  reduce using rule 33 (function_and_procedure_block)


State 59

   12 more_const_definition: T_IDENTIFIER . T_SINGLEEQ some_numeric_type ';' more_const_definition

    T_SINGLEEQ  shift, and go to state 85


State 60

   11 const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition .

    $default  reduce using rule 11 (const_definition)


State 61

   13 more_const_definition: epsilon .

    $default  reduce using rule 13 (more_const_definition)


State 62

   28 more_type_identifiers: ',' T_IDENTIFIER . $@4 more_type_identifiers

    $default  reduce using rule 27 ($@4)

    $@4  go to state 86


State 63

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ . T_DATATYPE $@2 ';' type_definition

    T_DATATYPE  shift, and go to state 87


State 64

   31 more_var_identifiers: ',' . T_IDENTIFIER $@5 more_var_identifiers

    T_IDENTIFIER  shift, and go to state 88


State 65

   23 variable_declaration: T_IDENTIFIER $@3 more_var_identifiers . ':' data_type ';' variable_declaration

    ':'  shift, and go to state 89


State 66

   32 more_var_identifiers: epsilon .

    $default  reduce using rule 32 (more_var_identifiers)


State 67

   36 procedure_block: T_PROCEDURE T_IDENTIFIER ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 104 (epsilon)

    block       go to state 90
    uses_block  go to state 9
    epsilon     go to state 10


State 68

   37 procedure_block: T_PROCEDURE T_IDENTIFIER '(' . param_list ')' ';' block ';'

    T_IDENTIFIER  shift, and go to state 91

    $default  reduce using rule 104 (epsilon)

    param_list  go to state 92
    epsilon     go to state 93


State 69

   41 function_block: T_FUNCTION T_IDENTIFIER ':' . T_DATATYPE ';' block ';'

    T_DATATYPE  shift, and go to state 94


State 70

   42 function_block: T_FUNCTION T_IDENTIFIER '(' . function_param_list ')' ':' T_DATATYPE ';' block ';'

    T_IDENTIFIER  shift, and go to state 95

    function_param_list  go to state 96


State 71

   57 while_statement: T_WHILE . expression T_DO execution_body

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    value       go to state 103
    expression  go to state 104


State 72

   61 print_statements: T_WRITELN . '(' T_STRINGVAL ')' ';'

    '('  shift, and go to state 105


State 73

   58 for_statement: T_FOR . T_IDENTIFIER T_ASOP for_list T_DO execution_body

    T_IDENTIFIER  shift, and go to state 106


State 74

   64 assignment_statement: T_IDENTIFIER . assignment_ops expression

    T_ASOP     shift, and go to state 107
    T_AS_PE    shift, and go to state 108
    T_AS_SE    shift, and go to state 109
    T_AS_MULE  shift, and go to state 110
    T_AS_DIVE  shift, and go to state 111

    assignment_ops  go to state 112


State 75

   47 execution_block: T_BEGIN execution_body . T_END

    T_END  shift, and go to state 113


State 76

   50 execution_body: structured_statements . execution_body

    T_WHILE       shift, and go to state 71
    T_WRITELN     shift, and go to state 72
    T_FOR         shift, and go to state 73
    T_IDENTIFIER  shift, and go to state 74

    T_WHILE       [reduce using rule 104 (epsilon)]
    T_END         reduce using rule 104 (epsilon)
    T_WRITELN     [reduce using rule 104 (epsilon)]
    T_FOR         [reduce using rule 104 (epsilon)]
    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    ';'           reduce using rule 54 (conditional_statement)
    ';'           [reduce using rule 104 (epsilon)]
    $default      reduce using rule 54 (conditional_statement)

    execution_body         go to state 114
    structured_statements  go to state 76
    conditional_statement  go to state 77
    repetitive_statement   go to state 78
    while_statement        go to state 79
    for_statement          go to state 80
    print_statements       go to state 81
    assignment_statements  go to state 82
    assignment_statement   go to state 83
    epsilon                go to state 84


State 77

   52 structured_statements: conditional_statement . ';'

    ';'  shift, and go to state 115


State 78

   53 structured_statements: repetitive_statement .

    $default  reduce using rule 53 (structured_statements)


State 79

   56 repetitive_statement: while_statement .

    $default  reduce using rule 56 (repetitive_statement)


State 80

   55 repetitive_statement: for_statement .

    $default  reduce using rule 55 (repetitive_statement)


State 81

   49 execution_body: print_statements . execution_body

    T_WHILE       shift, and go to state 71
    T_WRITELN     shift, and go to state 72
    T_FOR         shift, and go to state 73
    T_IDENTIFIER  shift, and go to state 74

    T_WHILE       [reduce using rule 104 (epsilon)]
    T_END         reduce using rule 104 (epsilon)
    T_WRITELN     [reduce using rule 104 (epsilon)]
    T_FOR         [reduce using rule 104 (epsilon)]
    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    ';'           reduce using rule 54 (conditional_statement)
    ';'           [reduce using rule 104 (epsilon)]
    $default      reduce using rule 54 (conditional_statement)

    execution_body         go to state 116
    structured_statements  go to state 76
    conditional_statement  go to state 77
    repetitive_statement   go to state 78
    while_statement        go to state 79
    for_statement          go to state 80
    print_statements       go to state 81
    assignment_statements  go to state 82
    assignment_statement   go to state 83
    epsilon                go to state 84


State 82

   48 execution_body: assignment_statements . execution_body

    T_WHILE       shift, and go to state 71
    T_WRITELN     shift, and go to state 72
    T_FOR         shift, and go to state 73
    T_IDENTIFIER  shift, and go to state 74

    T_WHILE       [reduce using rule 104 (epsilon)]
    T_END         reduce using rule 104 (epsilon)
    T_WRITELN     [reduce using rule 104 (epsilon)]
    T_FOR         [reduce using rule 104 (epsilon)]
    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    ';'           reduce using rule 54 (conditional_statement)
    ';'           [reduce using rule 104 (epsilon)]
    $default      reduce using rule 54 (conditional_statement)

    execution_body         go to state 117
    structured_statements  go to state 76
    conditional_statement  go to state 77
    repetitive_statement   go to state 78
    while_statement        go to state 79
    for_statement          go to state 80
    print_statements       go to state 81
    assignment_statements  go to state 82
    assignment_statement   go to state 83
    epsilon                go to state 84


State 83

   62 assignment_statements: assignment_statement . ';' assignment_statements

    ';'  shift, and go to state 118


State 84

   51 execution_body: epsilon .
   63 assignment_statements: epsilon .

    T_WHILE       reduce using rule 51 (execution_body)
    T_WHILE       [reduce using rule 63 (assignment_statements)]
    T_END         reduce using rule 51 (execution_body)
    T_END         [reduce using rule 63 (assignment_statements)]
    T_WRITELN     reduce using rule 51 (execution_body)
    T_WRITELN     [reduce using rule 63 (assignment_statements)]
    T_FOR         reduce using rule 51 (execution_body)
    T_FOR         [reduce using rule 63 (assignment_statements)]
    T_IDENTIFIER  reduce using rule 51 (execution_body)
    T_IDENTIFIER  [reduce using rule 63 (assignment_statements)]
    ';'           reduce using rule 51 (execution_body)
    ';'           [reduce using rule 63 (assignment_statements)]
    $default      reduce using rule 51 (execution_body)


State 85

   12 more_const_definition: T_IDENTIFIER T_SINGLEEQ . some_numeric_type ';' more_const_definition

    T_INTVAL    shift, and go to state 35
    T_FLOATVAL  shift, and go to state 36

    some_numeric_type  go to state 119


State 86

   28 more_type_identifiers: ',' T_IDENTIFIER $@4 . more_type_identifiers

    ','  shift, and go to state 49

    $default  reduce using rule 104 (epsilon)

    more_type_identifiers  go to state 120
    epsilon                go to state 51


State 87

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE . $@2 ';' type_definition

    $default  reduce using rule 17 ($@2)

    $@2  go to state 121


State 88

   31 more_var_identifiers: ',' T_IDENTIFIER . $@5 more_var_identifiers

    $default  reduce using rule 30 ($@5)

    $@5  go to state 122


State 89

   23 variable_declaration: T_IDENTIFIER $@3 more_var_identifiers ':' . data_type ';' variable_declaration

    T_IDENTIFIER  shift, and go to state 123
    T_DATATYPE    shift, and go to state 124

    data_type  go to state 125


State 90

   36 procedure_block: T_PROCEDURE T_IDENTIFIER ';' block . ';'

    ';'  shift, and go to state 126


State 91

   38 param_list: T_IDENTIFIER . ':' T_DATATYPE
   39           | T_IDENTIFIER . ':' T_DATATYPE ';' param_list

    ':'  shift, and go to state 127


State 92

   37 procedure_block: T_PROCEDURE T_IDENTIFIER '(' param_list . ')' ';' block ';'

    ')'  shift, and go to state 128


State 93

   40 param_list: epsilon .

    $default  reduce using rule 40 (param_list)


State 94

   41 function_block: T_FUNCTION T_IDENTIFIER ':' T_DATATYPE . ';' block ';'

    ';'  shift, and go to state 129


State 95

   43 function_param_list: T_IDENTIFIER . more_func_identifiers ':' T_DATATYPE
   44                    | T_IDENTIFIER . more_func_identifiers ':' T_DATATYPE ';' function_param_list

    ','  shift, and go to state 130

    $default  reduce using rule 104 (epsilon)

    more_func_identifiers  go to state 131
    epsilon                go to state 132


State 96

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list . ')' ':' T_DATATYPE ';' block ';'

    ')'  shift, and go to state 133


State 97

   69 expression: T_IDENTIFIER .

    $default  reduce using rule 69 (expression)


State 98

   65 value: T_INTVAL .

    $default  reduce using rule 65 (value)


State 99

   66 value: T_FLOATVAL .

    $default  reduce using rule 66 (value)


State 100

   67 value: T_BOOLVAL .

    $default  reduce using rule 67 (value)


State 101

   68 value: T_STRINGVAL .

    $default  reduce using rule 68 (value)


State 102

   71 expression: '(' . expression ')'

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    value       go to state 103
    expression  go to state 134


State 103

   70 expression: value .

    $default  reduce using rule 70 (expression)


State 104

   57 while_statement: T_WHILE expression . T_DO execution_body
   72 expression: expression . operator expression

    T_DO        shift, and go to state 135
    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 105

   61 print_statements: T_WRITELN '(' . T_STRINGVAL ')' ';'

    T_STRINGVAL  shift, and go to state 161


State 106

   58 for_statement: T_FOR T_IDENTIFIER . T_ASOP for_list T_DO execution_body

    T_ASOP  shift, and go to state 162


State 107

   77 assignment_ops: T_ASOP .

    $default  reduce using rule 77 (assignment_ops)


State 108

   78 assignment_ops: T_AS_PE .

    $default  reduce using rule 78 (assignment_ops)


State 109

   79 assignment_ops: T_AS_SE .

    $default  reduce using rule 79 (assignment_ops)


State 110

   80 assignment_ops: T_AS_MULE .

    $default  reduce using rule 80 (assignment_ops)


State 111

   81 assignment_ops: T_AS_DIVE .

    $default  reduce using rule 81 (assignment_ops)


State 112

   64 assignment_statement: T_IDENTIFIER assignment_ops . expression

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    value       go to state 103
    expression  go to state 163


State 113

   47 execution_block: T_BEGIN execution_body T_END .

    $default  reduce using rule 47 (execution_block)


State 114

   50 execution_body: structured_statements execution_body .

    $default  reduce using rule 50 (execution_body)


State 115

   52 structured_statements: conditional_statement ';' .

    $default  reduce using rule 52 (structured_statements)


State 116

   49 execution_body: print_statements execution_body .

    $default  reduce using rule 49 (execution_body)


State 117

   48 execution_body: assignment_statements execution_body .

    $default  reduce using rule 48 (execution_body)


State 118

   62 assignment_statements: assignment_statement ';' . assignment_statements

    T_IDENTIFIER  shift, and go to state 74

    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    $default      reduce using rule 104 (epsilon)

    assignment_statements  go to state 164
    assignment_statement   go to state 83
    epsilon                go to state 165


State 119

   12 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type . ';' more_const_definition

    ';'  shift, and go to state 166


State 120

   28 more_type_identifiers: ',' T_IDENTIFIER $@4 more_type_identifiers .

    $default  reduce using rule 28 (more_type_identifiers)


State 121

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 . ';' type_definition

    ';'  shift, and go to state 167


State 122

   31 more_var_identifiers: ',' T_IDENTIFIER $@5 . more_var_identifiers

    ','  shift, and go to state 64

    $default  reduce using rule 104 (epsilon)

    more_var_identifiers  go to state 168
    epsilon               go to state 66


State 123

   26 data_type: T_IDENTIFIER .

    $default  reduce using rule 26 (data_type)


State 124

   25 data_type: T_DATATYPE .

    $default  reduce using rule 25 (data_type)


State 125

   23 variable_declaration: T_IDENTIFIER $@3 more_var_identifiers ':' data_type . ';' variable_declaration

    ';'  shift, and go to state 169


State 126

   36 procedure_block: T_PROCEDURE T_IDENTIFIER ';' block ';' .

    $default  reduce using rule 36 (procedure_block)


State 127

   38 param_list: T_IDENTIFIER ':' . T_DATATYPE
   39           | T_IDENTIFIER ':' . T_DATATYPE ';' param_list

    T_DATATYPE  shift, and go to state 170


State 128

   37 procedure_block: T_PROCEDURE T_IDENTIFIER '(' param_list ')' . ';' block ';'

    ';'  shift, and go to state 171


State 129

   41 function_block: T_FUNCTION T_IDENTIFIER ':' T_DATATYPE ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 104 (epsilon)

    block       go to state 172
    uses_block  go to state 9
    epsilon     go to state 10


State 130

   45 more_func_identifiers: ',' . T_IDENTIFIER more_func_identifiers

    T_IDENTIFIER  shift, and go to state 173


State 131

   43 function_param_list: T_IDENTIFIER more_func_identifiers . ':' T_DATATYPE
   44                    | T_IDENTIFIER more_func_identifiers . ':' T_DATATYPE ';' function_param_list

    ':'  shift, and go to state 174


State 132

   46 more_func_identifiers: epsilon .

    $default  reduce using rule 46 (more_func_identifiers)


State 133

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list ')' . ':' T_DATATYPE ';' block ';'

    ':'  shift, and go to state 175


State 134

   71 expression: '(' expression . ')'
   72           | expression . operator expression

    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    ')'         shift, and go to state 176
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 135

   57 while_statement: T_WHILE expression T_DO . execution_body

    T_WHILE       shift, and go to state 71
    T_WRITELN     shift, and go to state 72
    T_FOR         shift, and go to state 73
    T_IDENTIFIER  shift, and go to state 74

    T_WHILE       [reduce using rule 104 (epsilon)]
    T_END         reduce using rule 104 (epsilon)
    T_WRITELN     [reduce using rule 104 (epsilon)]
    T_FOR         [reduce using rule 104 (epsilon)]
    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    ';'           reduce using rule 54 (conditional_statement)
    ';'           [reduce using rule 104 (epsilon)]
    $default      reduce using rule 54 (conditional_statement)

    execution_body         go to state 177
    structured_statements  go to state 76
    conditional_statement  go to state 77
    repetitive_statement   go to state 78
    while_statement        go to state 79
    for_statement          go to state 80
    print_statements       go to state 81
    assignment_statements  go to state 82
    assignment_statement   go to state 83
    epsilon                go to state 84


State 136

   93 boolean_ops: T_BOOL_AND .

    $default  reduce using rule 93 (boolean_ops)


State 137

   94 boolean_ops: T_BOOL_OR .

    $default  reduce using rule 94 (boolean_ops)


State 138

   95 boolean_ops: T_BOOL_NOT .

    $default  reduce using rule 95 (boolean_ops)


State 139

   90 relational_ops: T_REL_LE .

    $default  reduce using rule 90 (relational_ops)


State 140

   91 relational_ops: T_REL_GE .

    $default  reduce using rule 91 (relational_ops)


State 141

   92 relational_ops: T_REL_NE .

    $default  reduce using rule 92 (relational_ops)


State 142

   87 relational_ops: T_SINGLEEQ .

    $default  reduce using rule 87 (relational_ops)


State 143

  100 bitwise_ops: T_BIT_LS .

    $default  reduce using rule 100 (bitwise_ops)


State 144

  101 bitwise_ops: T_BIT_RS .

    $default  reduce using rule 101 (bitwise_ops)


State 145

   82 arithmetic_ops: '+' .

    $default  reduce using rule 82 (arithmetic_ops)


State 146

   83 arithmetic_ops: '*' .

    $default  reduce using rule 83 (arithmetic_ops)


State 147

   84 arithmetic_ops: '/' .

    $default  reduce using rule 84 (arithmetic_ops)


State 148

   85 arithmetic_ops: '-' .

    $default  reduce using rule 85 (arithmetic_ops)


State 149

   86 arithmetic_ops: '%' .

    $default  reduce using rule 86 (arithmetic_ops)


State 150

   88 relational_ops: '>' .

    $default  reduce using rule 88 (relational_ops)


State 151

   89 relational_ops: '<' .

    $default  reduce using rule 89 (relational_ops)


State 152

   96 bitwise_ops: '&' .

    $default  reduce using rule 96 (bitwise_ops)


State 153

   97 bitwise_ops: '|' .

    $default  reduce using rule 97 (bitwise_ops)


State 154

   98 bitwise_ops: '~' .

    $default  reduce using rule 98 (bitwise_ops)


State 155

   99 bitwise_ops: '!' .

    $default  reduce using rule 99 (bitwise_ops)


State 156

   72 expression: expression operator . expression

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    value       go to state 103
    expression  go to state 178


State 157

   73 operator: arithmetic_ops .

    $default  reduce using rule 73 (operator)


State 158

   74 operator: relational_ops .

    $default  reduce using rule 74 (operator)


State 159

   75 operator: boolean_ops .

    $default  reduce using rule 75 (operator)


State 160

   76 operator: bitwise_ops .

    $default  reduce using rule 76 (operator)


State 161

   61 print_statements: T_WRITELN '(' T_STRINGVAL . ')' ';'

    ')'  shift, and go to state 179


State 162

   58 for_statement: T_FOR T_IDENTIFIER T_ASOP . for_list T_DO execution_body

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    for_list    go to state 180
    value       go to state 103
    expression  go to state 181


State 163

   64 assignment_statement: T_IDENTIFIER assignment_ops expression .
   72 expression: expression . operator expression

    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    $default  reduce using rule 64 (assignment_statement)

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 164

   62 assignment_statements: assignment_statement ';' assignment_statements .

    $default  reduce using rule 62 (assignment_statements)


State 165

   63 assignment_statements: epsilon .

    $default  reduce using rule 63 (assignment_statements)


State 166

   12 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' . more_const_definition

    T_IDENTIFIER  shift, and go to state 59

    $default  reduce using rule 104 (epsilon)

    more_const_definition  go to state 182
    epsilon                go to state 61


State 167

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' . type_definition

    T_IDENTIFIER  shift, and go to state 28

    $default  reduce using rule 104 (epsilon)

    type_definition  go to state 183
    epsilon          go to state 30


State 168

   31 more_var_identifiers: ',' T_IDENTIFIER $@5 more_var_identifiers .

    $default  reduce using rule 31 (more_var_identifiers)


State 169

   23 variable_declaration: T_IDENTIFIER $@3 more_var_identifiers ':' data_type ';' . variable_declaration

    T_IDENTIFIER  shift, and go to state 39

    $default  reduce using rule 104 (epsilon)

    variable_declaration  go to state 184
    epsilon               go to state 41


State 170

   38 param_list: T_IDENTIFIER ':' T_DATATYPE .
   39           | T_IDENTIFIER ':' T_DATATYPE . ';' param_list

    ';'  shift, and go to state 185

    $default  reduce using rule 38 (param_list)


State 171

   37 procedure_block: T_PROCEDURE T_IDENTIFIER '(' param_list ')' ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 104 (epsilon)

    block       go to state 186
    uses_block  go to state 9
    epsilon     go to state 10


State 172

   41 function_block: T_FUNCTION T_IDENTIFIER ':' T_DATATYPE ';' block . ';'

    ';'  shift, and go to state 187


State 173

   45 more_func_identifiers: ',' T_IDENTIFIER . more_func_identifiers

    ','  shift, and go to state 130

    $default  reduce using rule 104 (epsilon)

    more_func_identifiers  go to state 188
    epsilon                go to state 132


State 174

   43 function_param_list: T_IDENTIFIER more_func_identifiers ':' . T_DATATYPE
   44                    | T_IDENTIFIER more_func_identifiers ':' . T_DATATYPE ';' function_param_list

    T_DATATYPE  shift, and go to state 189


State 175

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list ')' ':' . T_DATATYPE ';' block ';'

    T_DATATYPE  shift, and go to state 190


State 176

   71 expression: '(' expression ')' .

    $default  reduce using rule 71 (expression)


State 177

   57 while_statement: T_WHILE expression T_DO execution_body .

    $default  reduce using rule 57 (while_statement)


State 178

   72 expression: expression . operator expression
   72           | expression operator expression .

    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    T_BOOL_AND  [reduce using rule 72 (expression)]
    T_BOOL_OR   [reduce using rule 72 (expression)]
    T_BOOL_NOT  [reduce using rule 72 (expression)]
    T_REL_LE    [reduce using rule 72 (expression)]
    T_REL_GE    [reduce using rule 72 (expression)]
    T_REL_NE    [reduce using rule 72 (expression)]
    T_SINGLEEQ  [reduce using rule 72 (expression)]
    T_BIT_LS    [reduce using rule 72 (expression)]
    T_BIT_RS    [reduce using rule 72 (expression)]
    '+'         [reduce using rule 72 (expression)]
    '*'         [reduce using rule 72 (expression)]
    '/'         [reduce using rule 72 (expression)]
    '-'         [reduce using rule 72 (expression)]
    '%'         [reduce using rule 72 (expression)]
    '>'         [reduce using rule 72 (expression)]
    '<'         [reduce using rule 72 (expression)]
    '&'         [reduce using rule 72 (expression)]
    '|'         [reduce using rule 72 (expression)]
    '~'         [reduce using rule 72 (expression)]
    '!'         [reduce using rule 72 (expression)]
    $default    reduce using rule 72 (expression)

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 179

   61 print_statements: T_WRITELN '(' T_STRINGVAL ')' . ';'

    ';'  shift, and go to state 191


State 180

   58 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list . T_DO execution_body

    T_DO  shift, and go to state 192


State 181

   59 for_list: expression . T_TO expression
   60         | expression . T_DOWNTO expression
   72 expression: expression . operator expression

    T_TO        shift, and go to state 193
    T_DOWNTO    shift, and go to state 194
    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 182

   12 more_const_definition: T_IDENTIFIER T_SINGLEEQ some_numeric_type ';' more_const_definition .

    $default  reduce using rule 12 (more_const_definition)


State 183

   18 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition .

    $default  reduce using rule 18 (type_definition)


State 184

   23 variable_declaration: T_IDENTIFIER $@3 more_var_identifiers ':' data_type ';' variable_declaration .

    $default  reduce using rule 23 (variable_declaration)


State 185

   39 param_list: T_IDENTIFIER ':' T_DATATYPE ';' . param_list

    T_IDENTIFIER  shift, and go to state 91

    $default  reduce using rule 104 (epsilon)

    param_list  go to state 195
    epsilon     go to state 93


State 186

   37 procedure_block: T_PROCEDURE T_IDENTIFIER '(' param_list ')' ';' block . ';'

    ';'  shift, and go to state 196


State 187

   41 function_block: T_FUNCTION T_IDENTIFIER ':' T_DATATYPE ';' block ';' .

    $default  reduce using rule 41 (function_block)


State 188

   45 more_func_identifiers: ',' T_IDENTIFIER more_func_identifiers .

    $default  reduce using rule 45 (more_func_identifiers)


State 189

   43 function_param_list: T_IDENTIFIER more_func_identifiers ':' T_DATATYPE .
   44                    | T_IDENTIFIER more_func_identifiers ':' T_DATATYPE . ';' function_param_list

    ';'  shift, and go to state 197

    $default  reduce using rule 43 (function_param_list)


State 190

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list ')' ':' T_DATATYPE . ';' block ';'

    ';'  shift, and go to state 198


State 191

   61 print_statements: T_WRITELN '(' T_STRINGVAL ')' ';' .

    $default  reduce using rule 61 (print_statements)


State 192

   58 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list T_DO . execution_body

    T_WHILE       shift, and go to state 71
    T_WRITELN     shift, and go to state 72
    T_FOR         shift, and go to state 73
    T_IDENTIFIER  shift, and go to state 74

    T_WHILE       [reduce using rule 104 (epsilon)]
    T_END         reduce using rule 104 (epsilon)
    T_WRITELN     [reduce using rule 104 (epsilon)]
    T_FOR         [reduce using rule 104 (epsilon)]
    T_IDENTIFIER  [reduce using rule 104 (epsilon)]
    ';'           reduce using rule 54 (conditional_statement)
    ';'           [reduce using rule 104 (epsilon)]
    $default      reduce using rule 54 (conditional_statement)

    execution_body         go to state 199
    structured_statements  go to state 76
    conditional_statement  go to state 77
    repetitive_statement   go to state 78
    while_statement        go to state 79
    for_statement          go to state 80
    print_statements       go to state 81
    assignment_statements  go to state 82
    assignment_statement   go to state 83
    epsilon                go to state 84


State 193

   59 for_list: expression T_TO . expression

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    value       go to state 103
    expression  go to state 200


State 194

   60 for_list: expression T_DOWNTO . expression

    T_IDENTIFIER  shift, and go to state 97
    T_INTVAL      shift, and go to state 98
    T_FLOATVAL    shift, and go to state 99
    T_BOOLVAL     shift, and go to state 100
    T_STRINGVAL   shift, and go to state 101
    '('           shift, and go to state 102

    value       go to state 103
    expression  go to state 201


State 195

   39 param_list: T_IDENTIFIER ':' T_DATATYPE ';' param_list .

    $default  reduce using rule 39 (param_list)


State 196

   37 procedure_block: T_PROCEDURE T_IDENTIFIER '(' param_list ')' ';' block ';' .

    $default  reduce using rule 37 (procedure_block)


State 197

   44 function_param_list: T_IDENTIFIER more_func_identifiers ':' T_DATATYPE ';' . function_param_list

    T_IDENTIFIER  shift, and go to state 95

    function_param_list  go to state 202


State 198

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list ')' ':' T_DATATYPE ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 104 (epsilon)

    block       go to state 203
    uses_block  go to state 9
    epsilon     go to state 10


State 199

   58 for_statement: T_FOR T_IDENTIFIER T_ASOP for_list T_DO execution_body .

    $default  reduce using rule 58 (for_statement)


State 200

   59 for_list: expression T_TO expression .
   72 expression: expression . operator expression

    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    $default  reduce using rule 59 (for_list)

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 201

   60 for_list: expression T_DOWNTO expression .
   72 expression: expression . operator expression

    T_BOOL_AND  shift, and go to state 136
    T_BOOL_OR   shift, and go to state 137
    T_BOOL_NOT  shift, and go to state 138
    T_REL_LE    shift, and go to state 139
    T_REL_GE    shift, and go to state 140
    T_REL_NE    shift, and go to state 141
    T_SINGLEEQ  shift, and go to state 142
    T_BIT_LS    shift, and go to state 143
    T_BIT_RS    shift, and go to state 144
    '+'         shift, and go to state 145
    '*'         shift, and go to state 146
    '/'         shift, and go to state 147
    '-'         shift, and go to state 148
    '%'         shift, and go to state 149
    '>'         shift, and go to state 150
    '<'         shift, and go to state 151
    '&'         shift, and go to state 152
    '|'         shift, and go to state 153
    '~'         shift, and go to state 154
    '!'         shift, and go to state 155

    $default  reduce using rule 60 (for_list)

    operator        go to state 156
    arithmetic_ops  go to state 157
    relational_ops  go to state 158
    boolean_ops     go to state 159
    bitwise_ops     go to state 160


State 202

   44 function_param_list: T_IDENTIFIER more_func_identifiers ':' T_DATATYPE ';' function_param_list .

    $default  reduce using rule 44 (function_param_list)


State 203

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list ')' ':' T_DATATYPE ';' block . ';'

    ';'  shift, and go to state 204


State 204

   42 function_block: T_FUNCTION T_IDENTIFIER '(' function_param_list ')' ':' T_DATATYPE ';' block ';' .

    $default  reduce using rule 42 (function_block)
